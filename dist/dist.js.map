{"version":3,"sources":["webpack://cdav/webpack/universalModuleDefinition","webpack://cdav/webpack/bootstrap","webpack://cdav/./src/debug.js","webpack://cdav/./src/request.js","webpack://cdav/./src/utility/namespaceUtility.js","webpack://cdav/./src/utility/stringUtility.js","webpack://cdav/./src/utility/xmlUtility.js","webpack://cdav/./src/models/davEventListener.js","webpack://cdav/./src/parser/davCollectionParser.js","webpack://cdav/./src/propset/davCollectionPropSet.js","webpack://cdav/./src/models/davObject.js","webpack://cdav/./src/models/davCollection.js","webpack://cdav/./src/parser/davCollectionPublishableParser.js","webpack://cdav/./src/models/davCollectionPublishable.js","webpack://cdav/./src/parser/davCollectionShareableParser.js","webpack://cdav/./src/models/davCollectionShareable.js","webpack://cdav/./src/models/vobject.js","webpack://cdav/./src/parser/calendarParser.js","webpack://cdav/./src/propset/calendarPropSet.js","webpack://cdav/./src/models/calendar.js","webpack://cdav/./src/models/subscription.js","webpack://cdav/./src/models/scheduleInbox.js","webpack://cdav/./src/models/scheduleOutbox.js","webpack://cdav/./src/models/calendarHome.js","webpack://cdav/./src/parser/addressbookParser.js","webpack://cdav/./src/propset/addressBookPropSet.js","webpack://cdav/./src/models/vcard.js","webpack://cdav/./src/models/addressBook.js","webpack://cdav/./src/models/addressBookHome.js","webpack://cdav/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","debugFactory","context","args","enabled","console","log","Request","[object Object]","baseUrl","xhrProvider","this","_davClient","dav","Client","method","url","headers","body","absoluteUrl","request","properties","depth","props","map","propFind","then","res","wasRequestSuccessful","status","Error","reducePropStats","filter200Responses","propStat","groupedPropStats","groupMultistatusByPath","entries","forEach","assign","Content-Type","pathname","substr","length","slashPos","lastIndexOf","URL","href","responses","grouped","response","filter","parseInt","split","getStatusCodeFromString","propStats","propObjects","push","apply","DAV","IETF_CALDAV","IETF_CARDDAV","OWNCLOUD","NEXTCLOUD","APPLE","CALENDARSERVER","uid","prefix","suffix","replace","Math","random","toString","toUpperCase","serializer","XMLSerializer","prefixMap","getRootSkeleton","arguments","skeleton","children","childrenWrapper","Array","slice","argument","level","serialize","json","document","implementation","createDocument","xmlify","xmlDoc","parent","localName","element","createElementNS","keys","getPrefixedNameForNamespace","attributes","attribute","setAttribute","namespace","setAttributeNS","textContent","child","appendChild","serializeToString","DAVEventListener","_eventListeners","type","listener","options","index","findIndex","sListener","sOptions","splice","event","once","removeEventListener","davCollectionParser","parsed","simple","ace","aceChildren","childNodes","principal","obj","grant","deny","protect","inherit","aceChild","namespaceURI","principalChild","find","grantChild","acl","prop","simpleText","owner","resourceType","davCollectionPropSet","xmlified","davObject_debug","davObject_DavObject","isPartial","super","_parent","_request","_url","_props","_isPartial","_isDirty","_exposeProperty","constructor","getPropFindList","collection","If-Match","etag","put","data","delete","xmlNamespace","xmlName","mutable","set","val","davCollection_debug","davCollection_DavCollection","_rawProps","_collectionFactoryMapper","_objectFactoryMapper","_updatedProperties","_childrenNames","_propFindList","_propSetFactory","_registerPropFindParser","_registerPropSetFactory","_handleMultiStatusResponse","findAll","uri","dPropChildren","_getAvailableNameFromToken","mkCol","updatedProperty","propSet","reduce","arr","dPropSet","propPatch","identifier","parser","indexOf","token","start","isAvailable","toLowerCase","positionLastDash","firstPart","lastPart","match","stringUtility_uri","path","contentType","collectionType","e","getNodesClarkeName","getCollectionType","node","davCollectionPublishableParser","isArray","publishUrl","davCollectionPublishable_debug","davCollectionShareableParser","shares","getElementsByTagNameNS","displayName","access","writable","invite","v","allowedSharingModes","davCollectionShareable_debug","davCollectionShareable","Base","principalUri","readWrite","summary","oSetChildren","xml","post","concat","vobject_VObject","calendarParser","calendarColor","calendarParser_simpleText","simpleInt","calendarParser_source","simpleComponents","vevent","vjournal","vtodo","component","getNamedItem","supportedCalendarComponentSet","content-type","getAttribute","version","supportedCalendarData","dateTime","supportedCollationSet","simpleBool","year","month","date","hour","minute","second","dateObj","Date","setUTCFullYear","setUTCHours","calendarPropSet","calendar_debug","calendar_Calendar","davCollectionPublishable","_registerObjectFactory","findAllByFilter","elm","calendarQuery","from","to","_getICalendarDateTimeFromDateObject","createObject","timezone","report","Depth","_isRetrievalPartial","hrefs","addressBookDataProperty","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","join","subscription_Subscription","scheduleInbox_ScheduleInbox","scheduleOutbox_ScheduleOutbox","calendarHome_debug","calendarHome_CalendarHome","_registerCollectionFactory","displayname","color","createCollection","source","addressBookParser","addressbookParser_text","addressbookParser_int","bool","supportedAddressData","addressBookPropSet","vcard_VCard","addressBook_debug","addressBook_AddressBook","addressbookQuery","limit","addressBookHome_debug","addressBookHome_AddressBookHome","__webpack_exports__","src_DavClient","namespaceUtility_namespaceObject","src_debug","factories","rootUrl","advertisedFeatures","principalUrl","principalCollections","calendarHomes","addressBookHomes","enableCalDAV","enableCardDAV","_discoverPrincipalUri","_discoverCalendarHomes","_discoverAddressBookHomes","calendarHome","_extractPrincipalCollectionSets","addressbookHome","principalCollectionSets","principalCollection"],"mappings":"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","file":"dist.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cdav\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cdav\"] = factory();\n\telse\n\t\troot[\"cdav\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n/**\n * creates a debug function bound to a context\n * @param {String} context\n * @returns {Function}\n */\nexport function debugFactory(context) {\n\treturn (...args) => {\n\t\tif (debugFactory.enabled) {\n\t\t\tconsole.log(context, args);\n\t\t}\n\t}\n}\n\ndebugFactory.enabled = false;\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n// import normalizeUrl from 'normalize-url';\n\nimport {debugFactory} from \"./debug.js\";\nconst debug = debugFactory('request.js');\n\n/**\n * wrapper class for davclient.js with url helper methods\n */\nexport default class Request {\n\n\t/**\n\t * @param {String} baseUrl\n\t * @param {Function} xhrProvider\n\t */\n\tconstructor(baseUrl, xhrProvider=null) {\n\t\tthis.baseUrl = baseUrl;\n\t\tthis._davClient = new dav.Client({baseUrl});\n\t\tthis._davClient.xhrProvider = xhrProvider || this._davClient.xhrProvider;\n\t}\n\n\t/**\n\t *\n\t * @param {string} method - HTTP Method name\n\t * @param {string} url - URL to do the request on\n\t * @param {object} headers - additional HTTP headers to send\n\t * @param {string} body\n\t * @returns {Promise<*>}\n\t */\n\tasync basic(method, url, headers, body) {\n\t\turl = this.absoluteUrl(url);\n\t\treturn this._davClient.request(method, url, headers, body);\n\t}\n\n\t/**\n\t * @param {string} url - URL to do the GET request on\n\t * @param {object} headers - additional HTTP headers to send\n\t * @returns {Promise<*>}\n\t */\n\tasync get(url, headers) {\n\t\turl = this.absoluteUrl(url);\n\t\treturn this._davClient.request('GET', url, headers);\n\t}\n\n\t/**\n\t * @param {string} url - URL to do the PATCH request on\n\t * @param {object} headers - additional HTTP headers to send\n\t * @param {string} body\n\t * @returns {Promise<*>}\n\t */\n\tasync patch(url, headers, body) {\n\t\turl = this.absoluteUrl(url);\n\t\treturn this._davClient.request('PATCH', url, headers, body);\n\t}\n\n\t/**\n\t * @param {string} url - URL to do the POST request on\n\t * @param {object} headers - additional HTTP headers to send\n\t * @param {string} body\n\t * @returns {Promise<*>}\n\t */\n\tasync post(url, headers, body) {\n\t\turl = this.absoluteUrl(url);\n\t\treturn this._davClient.request('POST', url, headers, body);\n\t}\n\n\t/**\n\t * @param {string} url - URL to do the PUT request on\n\t * @param {object} headers - additional HTTP headers to send\n\t * @param {string} body\n\t * @returns {Promise<*>}\n\t */\n\tasync put(url, headers, body) {\n\t\turl = this.absoluteUrl(url);\n\t\treturn this._davClient.request('PUT', url, headers, body);\n\t}\n\n\t/**\n\t * @param {string} url - URL to do the DELETE request on\n\t * @param {object} headers - additional HTTP headers to send\n\t * @returns {Promise<*>}\n\t */\n\tasync delete(url, headers={}) {\n\t\turl = this.absoluteUrl(url);\n\t\treturn this._davClient.request('DELETE', url, headers);\n\t}\n\n\t/**\n\t *\n\t * @returns {Promise<void>}\n\t */\n\tasync copy(url) {\n\t\turl = this.absoluteUrl(url);\n\n\t}\n\n\t/**\n\t *\n\t * @returns {Promise<void>}\n\t */\n\tasync move(url) {\n\t\turl = this.absoluteUrl(url);\n\n\t}\n\n\t/**\n\t * @param {string} url - URL to do the PropFind request on\n\t * @param {array} properties\n\t * @param {int} depth\n\t * @param {object} headers - additional HTTP headers to send\n\t * @returns {Promise<*>}\n\t */\n\tasync propFind(url, properties, depth=0, headers={}) {\n\t\t// convert out own property format to clarke notation\n\t\tconst props = properties.map((p) => `{${p[0]}}${p[1]}`);\n\n\t\turl = this.absoluteUrl(url);\n\t\treturn this._davClient.propFind(url, props, depth, headers).then((res) => {\n\t\t\tif (!wasRequestSuccessful(res.status)) {\n\t\t\t\tthrow new Error('PropFind request was not successful');\n\t\t\t}\n\n\t\t\tif (depth === 0) {\n\t\t\t\treturn reducePropStats(filter200Responses(res.body.propStat));\n\t\t\t} else {\n\t\t\t\tconst groupedPropStats = groupMultistatusByPath(res.body);\n\t\t\t\tObject.entries(groupedPropStats).forEach(([key, value]) => {\n\t\t\t\t\tgroupedPropStats[key] = reducePropStats(filter200Responses(value));\n\t\t\t\t});\n\n\t\t\t\treturn groupedPropStats;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} url - URL to do the PropPatch request on\n\t * @param {object} headers - additional HTTP headers to send\n\t * @param {String} body\n\t * @returns {Promise<*>}\n\t */\n\tasync propPatch(url, headers, body) {\n\t\turl = this.absoluteUrl(url);\n\t\treturn this._davClient.request('PROPPATCH', url, headers, body);\n\t}\n\n\t/**\n\t * @param {string} url - URL to do the MkCol request on\n\t * @param {object} headers - additional HTTP headers to send\n\t * @param {String} body\n\t * @returns {Promise<*>}\n\t */\n\tasync mkCol(url, headers, body) {\n\t\turl = this.absoluteUrl(url);\n\n\t\tObject.assign(headers, {\n\t\t\t'Content-Type': 'application/xml; charset=utf-8'\n\t\t});\n\n\t\treturn this._davClient.request('MKCOL', url, headers, body);\n\t}\n\n\t/**\n\t * @param {string} url - URL to do the REPORT request on\n\t * @param {object} headers - additional HTTP headers to send\n\t * @param {string} body\n\t * @returns {Promise<*>}\n\t */\n\tasync report(url, headers, body) {\n\t\turl = this.absoluteUrl(url);\n\t\treturn this._davClient.request('REPORT', url, headers, body).then((res) => {\n\t\t\tif (!wasRequestSuccessful(res.status)) {\n\t\t\t\tthrow new Error('PropFind request was not successful');\n\t\t\t}\n\n\t\t\tconst groupedPropStats = groupMultistatusByPath(res.body);\n\t\t\tObject.entries(groupedPropStats).forEach(([key, value]) => {\n\t\t\t\tgroupedPropStats[key] = reducePropStats(filter200Responses(value));\n\t\t\t});\n\n\t\t\treturn groupedPropStats;\n\t\t});\n\t}\n\n\t// /**\n\t//  * compares two URLs\n\t//  * @param {String} url1\n\t//  * @param {String} url2\n\t//  * @returns {boolean}\n\t//  */\n\t// compareURLs(url1, url2) {\n\t// \tif (url1 === url2) {\n\t// \t\treturn true;\n\t// \t}\n\t//\n\t// \t// TODO does this cover 'foo/bar/' === 'foo/bar'?\n\t//\n\t// \treturn normalizeUrl(url1) === normalizeUrl(url2);\n\t// }\n\n\t/**\n\t * returns name of file / folder\n\t * @params {string} url\n\t * @returns {string}\n\t */\n\tfilename(url) {\n\t\tlet pathname = this.pathname(url);\n\t\tif (pathname.substr(-1) === '/') { // TODO - use normalizeUrl instead?\n\t\t\tpathname = pathname.substr(0, pathname.length - 1);\n\t\t}\n\n\t\tconst slashPos = pathname.lastIndexOf('/');\n\t\treturn pathname.substr(slashPos);\n\t}\n\n\t/**\n\t * returns pathname for a URL\n\t * @params {string} url\n\t * @returns {string}\n\t */\n\tpathname(url) {\n\t\tconst urlObject = new URL(url, this.baseUrl);\n\t\treturn urlObject.pathname;\n\t}\n\n\t/**\n\t * @param {string} url\n\t * @returns {string}\n\t */\n\tabsoluteUrl(url) {\n\t\tconst urlObject = new URL(url, this.baseUrl);\n\t\treturn urlObject.href;\n\t}\n}\n\n/**\n *\n * @param responses\n */\nfunction groupMultistatusByPath(responses) {\n\tconst grouped = {};\n\n\tresponses.forEach((response) => {\n\t   grouped[response.href] = response.propStat;\n\t});\n\n\treturn grouped;\n}\n\n/**\n *\n * @param {Array} propStat\n * @return {Array}\n */\nfunction filter200Responses(propStat) {\n\treturn propStat.filter((p) => {\n\t\treturn wasRequestSuccessful(getStatusCodeFromString(p.status));\n\t});\n}\n\n/**\n * Check if response code is in the 2xx section\n * @param {Number} status\n * @returns {boolean}\n */\nfunction wasRequestSuccessful(status) {\n\treturn status >= 200 && status < 300;\n}\n\n/**\n *\n * @param {String} status\n * @returns {Number}\n */\nfunction getStatusCodeFromString(status) {\n\treturn parseInt(status.split(' ')[1]);\n}\n\n/**\n * @param {Array} propStats\n * @return {Object}\n */\nfunction reducePropStats(propStats) {\n\tconst propObjects = [{}];\n\n\tpropStats.forEach((propStat) => {\n\t\tpropObjects.push(propStat.properties);\n\t});\n\n\treturn Object.assign.apply(null, propObjects);\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport const DAV = 'DAV:';\nexport const IETF_CALDAV = 'urn:ietf:params:xml:ns:caldav';\nexport const IETF_CARDDAV = 'urn:ietf:params:xml:ns:carddav';\nexport const OWNCLOUD = 'http://owncloud.org/ns';\nexport const NEXTCLOUD = 'http://nextcloud.com/ns';\nexport const APPLE = 'http://apple.com/ns/ical/';\nexport const CALENDARSERVER = 'http://calendarserver.org/ns/';\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n// uuidv4 taken from https://stackoverflow.com/a/2117523\nfunction uuidv4() {\n\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n\t\tconst r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n\t\treturn v.toString(16).toUpperCase();\n\t});\n}\n\n/**\n * generates a unique id with the option to pass a prefix and a filetype\n *\n * @param {string} prefix\n * @param {string} suffix\n * @returns {string}\n */\nexport function uid(prefix, suffix) {\n\tprefix = prefix || '';\n\tsuffix = suffix || '';\n\n\tif (prefix !== '') {\n\t\tprefix += '-';\n\t}\n\tif (suffix !== '') {\n\t\tsuffix = '.' + suffix;\n\t}\n\n\treturn prefix + uuidv4() + suffix;\n}\n\n/**\n * generates a uri and checks with isAvailable, whether or not the uri is still available\n *\n * @param {string} start\n * @param {Function} isAvailable\n * @returns {string}\n */\nexport function uri(start, isAvailable) {\n\tstart = start || '';\n\n\tlet uri = start.toString().toLowerCase()\n\t\t.replace(/\\s+/g, '-')           // Replace spaces with -\n\t\t.replace(/[^\\w\\-]+/g, '')       // Remove all non-word chars\n\t\t.replace(/\\-\\-+/g, '-')         // Replace multiple - with single -\n\t\t.replace(/^-+/, '')             // Trim - from start of text\n\t\t.replace(/-+$/, '');            // Trim - from end of text\n\n\tif (uri === '') {\n\t\turi = '-';\n\t}\n\n\tif (isAvailable(uri)) {\n\t\treturn uri;\n\t}\n\n\tif (uri.indexOf('-') === -1) {\n\t\turi = uri + '-1';\n\t\tif (isAvailable(uri)) {\n\t\t\treturn uri;\n\t\t}\n\t}\n\n\t// === false because !undefined = true, possible infinite loop\n\tdo {\n\t\tconst positionLastDash = uri.lastIndexOf('-');\n\t\tconst firstPart = uri.substr(0, positionLastDash);\n\t\tlet lastPart = uri.substr(positionLastDash + 1);\n\n\t\tif (lastPart.match(/^\\d+$/)) {\n\t\t\tlastPart = parseInt(lastPart);\n\t\t\tlastPart++;\n\n\t\t\turi = firstPart + '-' + lastPart;\n\t\t} else {\n\t\t\turi = uri + '-1';\n\t\t}\n\t} while(isAvailable(uri) === false);\n\n\treturn uri;\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nconst serializer = new XMLSerializer();\nlet prefixMap = {};\n\n/**\n * builds the root skeleton\n *\n * @params {...Array} array of namespace / name pairs\n * @returns {*[]}\n */\nexport function getRootSkeleton()  {\n\tif (arguments.length === 0) {\n\t\treturn [{}, null];\n\t}\n\n\tconst skeleton = {\n\t\tname: arguments[0],\n\t\tchildren: []\n\t};\n\n\tlet childrenWrapper = skeleton.children;\n\n\tconst args = Array.prototype.slice.call(arguments, 1);\n\targs.forEach(function(argument) {\n\t\tconst level = {\n\t\t\tname: argument,\n\t\t\tchildren: []\n\t\t};\n\t\tchildrenWrapper.push(level);\n\t\tchildrenWrapper = level.children;\n\t});\n\n\treturn [skeleton, childrenWrapper];\n}\n\n/**\n * serializes an simple xml representation into a string\n *\n * @param {Object} json\n * @returns {string}\n */\nexport function serialize(json) {\n\tjson = json || {};\n\tif (typeof json !== 'object' || !json.hasOwnProperty('name')) {\n\t\treturn '';\n\t}\n\n\tconst root = document.implementation.createDocument('', '', null);\n\txmlify(root, root, json);\n\n\treturn serializer.serializeToString(root);\n}\n\nfunction xmlify(xmlDoc, parent, json) {\n\tconst [ns, localName] = json.name;\n\tconst element = xmlDoc.createElementNS(ns, getPrefixedNameForNamespace(ns, localName));\n\n\tjson.attributes = json.attributes || [];\n\tjson.attributes.forEach((attribute) => {\n\t\tif (attribute.length === 2) {\n\t\t\tconst [name, value] = attribute;\n\t\t\telement.setAttribute(name, value);\n\t\t} else {\n\t\t\tconst [namespace, localName, value] = attribute;\n\t\t\telement.setAttributeNS(namespace, localName, value);\n\t\t}\n\t});\n\n\tif (json.value) {\n\t\telement.textContent = json.value;\n\t} else if (json.children) {\n\t\tjson.children.forEach((child) => {\n\t\t\txmlify(xmlDoc, element, child);\n\t\t});\n\t}\n\n\tparent.appendChild(element);\n}\n\nexport function resetPrefixMap() {\n\tprefixMap = {};\n}\n\nfunction getPrefixedNameForNamespace(ns, localName) {\n\tif (!prefixMap.hasOwnProperty(ns)) {\n\t\tprefixMap[ns] = 'x' + Object.keys(prefixMap).length;\n\t}\n\n\treturn prefixMap[ns] + ':' + localName;\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport default class DAVEventListener {\n\n\tconstructor() {\n\t\tthis._eventListeners = {};\n\t}\n\n\t/**\n\t * adds an event listener\n\t *\n\t * @param {string} type\n\t * @param {function} listener\n\t * @param {object} options\n\t */\n\taddEventListener(type, listener, options={}) {\n\t\tthis._eventListeners[type] = this._eventListeners[type] || [];\n\t\tthis._eventListeners[type].push({listener, options});\n\t}\n\n\t/**\n\t * removes an event listener\n\t *\n\t * @param {string} type\n\t * @param {function} listener\n\t * @param {object} options\n\t */\n\tremoveEventListener(type, listener, options={}) {\n\t\tif (!this._eventListeners[type]) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst index = this._eventListeners[type].findIndex(({sListener, sOptions}) => {\n\t\t\treturn listener === sListener && options === sOptions;\n\t\t});\n\t\tif (index === -1) {\n\t\t\treturn;\n\t\t}\n\t\tthis._eventListeners[type].splice(index, 1);\n\t}\n\n\t/**\n\t * dispatch event on object\n\t *\n\t * @param {string} type\n\t * @param {DAVEvent} event\n\t */\n\tdispatchEvent(type, event) {\n\t\tif (!this._eventListeners[type]) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._eventListeners[type].forEach(({listener, options}) => {\n\t\t\tif (options.once) {\n\t\t\t\tthis.removeEventListener(type, listener, options);\n\t\t\t}\n\n\t\t\tlistener(event);\n\t\t});\n\t}\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport * as NS from \"../utility/namespaceUtility.js\";\n\n/**\n *\n * This parser is capable of parsing:\n * - {DAV:}acl\n * - {DAV:}displayname\n * - {DAV:}owner\n * - {DAV:}resourcetype\n * - {DAV:}sync-token\n *\n * @param {Object} props\n * @return {Object}\n */\nexport default function davCollectionParser(props) {\n\tconst parsed = {};\n\n\tObject.entries(props).forEach(([key, value]) => {\n\t\tswitch (key) {\n\t\t\tcase '{DAV:}acl':\n\t\t\t\tparsed[key] = acl(value);\n\t\t\t\tbreak;\n\n\t\t\tcase '{DAV:}displayname':\n\t\t\tcase '{DAV:}sync-token':\n\t\t\t\tparsed[key] = simpleText(value);\n\t\t\t\tbreak;\n\n\t\t\tcase '{DAV:}owner':\n\t\t\t\tparsed[key] = owner(value);\n\t\t\t\tbreak;\n\n\t\t\tcase '{DAV:}resourcetype':\n\t\t\t\tparsed[key] = resourceType(value);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\treturn parsed;\n}\n\nfunction simpleText(prop) {\n\treturn prop;\n}\n\n// TODO - this does the bare minimum at the moment\n// we should properly implement https://tools.ietf.org/html/rfc3744#section-5.5\nfunction acl(props) {\n\tconst simple = [];\n\n\tprops.forEach((ace) => {\n\t\tconst aceChildren = ace.childNodes;\n\n\t\tconst principal = {};\n\t\tlet obj = {principal, grant: [], deny: [], protect: [], inherit: []};\n\n\t\taceChildren.forEach((aceChild) => {\n\t\t\tif (aceChild.namespaceURI === 'DAV:' && aceChild.localName === 'principal') {\n\t\t\t\tconst principalChild = aceChild.children[0];\n\n\t\t\t\tprincipal.type = principalChild.localName;\n\t\t\t\tif (principalChild.localName === 'href') {\n\t\t\t\t\tprincipal.href = principalChild.textContent;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t});\n\n\t\tconst existingPrincipal = simple.find((s) => {\n\t\t\tif (s.principal.type === principal.type && s.principal.href === principal.href) {\n\t\t\t\tobj = s;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t});\n\t\tif (!existingPrincipal) {\n\t\t\tsimple.push(obj);\n\t\t}\n\n\t\taceChildren.forEach((aceChild) => {\n\t\t\tif (aceChild.namespaceURI === 'DAV:' && aceChild.localName === 'grant') {\n\t\t\t\taceChild.childNodes.forEach((grantChild) => {\n\t\t\t\t\tif (grantChild.namespaceURI !== 'DAV:' || grantChild.localName !== 'privilege') {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tobj.grant.push('{' + grantChild.children[0].namespaceURI + '}' + grantChild.children[0].localName);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// TODO - implement deny\n\n\t\t\t// TODO - implement protect\n\n\t\t\t// TODO - implement inherit\n\t\t});\n\t});\n\n\treturn simple;\n}\n\nfunction owner(prop) {\n\treturn prop[0].textContent;\n}\n\nfunction resourceType(prop) {\n\treturn prop.map((prop) => {\n\t\treturn '{' + prop.namespaceURI + '}' + prop.localName\n\t});\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport * as NS from \"../utility/namespaceUtility.js\";\n\n/**\n *\n * This function is capable of creating the propset xml structure for:\n * - {DAV:}displayname\n *\n * @param {Object} props\n * @return {Object}\n */\nexport default function davCollectionPropSet(props) {\n\tconst xmlified = [];\n\n\tObject.entries(props).forEach(([key, value]) => {\n\t\tswitch (key) {\n\t\t\tcase '{DAV:}displayname':\n\t\t\t\txmlified.push({\n\t\t\t\t\tname: [NS.DAV, 'displayname'],\n\t\t\t\t\tvalue: value\n\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\treturn xmlified;\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport DAVEventListener from \"./davEventListener.js\";\nimport * as NS from \"../utility/namespaceUtility.js\";\n\nimport {debugFactory} from \"../debug.js\";\nconst debug = debugFactory('DavObject');\n\n/**\n * @class\n * @classdesc Generic DavObject aka file\n */\nexport class DavObject extends DAVEventListener {\n\n\t/**\n\t * @param {DavCollection} parent - The parent collection this DavObject is a child of\n\t * @param {Request} request - The request object initialized by DavClient\n\t * @param {String} url - Full url of this DavObject\n\t * @param {Object} props - Properties including etag, content-type, etc.\n\t * @param {boolean} isPartial - Are we dealing with the complete or just partial addressbook / calendar data\n\t */\n\tconstructor(parent, request, url, props, isPartial=false) {\n\t\tsuper();\n\n\t\tObject.assign(this, {\n\t\t\t// parameters\n\t\t\t_parent: parent,\n\t\t\t_request: request,\n\t\t\t_url: url,\n\t\t\t_props: props,\n\t\t\t// housekeeping\n\t\t\t_isPartial: isPartial,\n\t\t\t_isDirty: false\n\t\t});\n\n\t\tthis._exposeProperty('etag', NS.DAV, 'getetag');\n\t\tthis._exposeProperty('contenttype', NS.DAV, 'getcontenttype');\n\n\t\tObject.defineProperty(this, 'url', {\n\t\t\tget: () => this._url\n\t\t});\n\t}\n\n\t/**\n\t * gets unfiltered data for this object\n\t *\n\t * @returns {Promise<void>}\n\t */\n\tasync fetchCompleteData() {\n\t\tif (!this._isPartial) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._props = await this._request.propFind(this._url, this.constructor.getPropFindList(), 0);\n\t\tthis._isDirty = false;\n\t\tthis._isPartial = false;\n\t}\n\n\t/**\n\t * copies a DavObject to a different DavCollection\n\t * @param {DavCollection} collection\n\t * @returns {Promise<DavObject>} Promise that resolves to the copied DavObject\n\t */\n\tasync copy(collection) {\n\t\tdebug(`copying ${this.url} from ${this._parent.url} to ${collection.url}`);\n\n\t\t// TODO: implement me\n\t\t// TODO: compare resourcetype of both collections, current and destination\n\t}\n\n\t/**\n\t * moves a DavObject to a different DavCollection\n\t * @param {DavCollection} collection\n\t * @returns {Promise<void>}\n\t */\n\tasync move(collection) {\n\t\tdebug(`moving ${this.url} from ${this._parent.url} to ${collection.url}`);\n\n\t\t// TODO: implement me\n\t\t// TODO: compare resourcetype of both collections, current and destination\n\t}\n\n\t/**\n\t * updates the DavObject on the server\n\t * @returns {Promise<void>}\n\t */\n\tasync update() {\n\t\t// don't update filtered object because we would\n\t\t// delete all other properties on the server\n\t\tif (this._isPartial) {\n\t\t\treturn;\n\t\t}\n\n\t\t// no need to update the object if it was not modified\n\t\tif (!this._isDirty) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst headers = {\n\t\t\t'If-Match': this.etag,\n\t\t};\n\n\t\t// TODO - update E-TAG\n\t\t// TODO - update Content-Type? should stay the same but let's be on the safe side\n\t\treturn this._request.put(this.url, headers, this.data).then((res) => {\n\t\t\tthis._isDirty = false;\n\t\t\treturn res;\n\t\t});\n\t}\n\n\t/**\n\t * deletes the DavObject on the server\n\t *\n\t * @returns {Promise<void>}\n\t */\n\tasync delete() {\n\t\treturn this._request.delete(this.url);\n\t}\n\n\t/**\n\t * returns whether the data in this DavObject is the result of a partial retrieval\n\t *\n\t * @returns {boolean}\n\t */\n\tisPartial() {\n\t\treturn this._isPartial;\n\t}\n\n\t/**\n\t * @protected\n\t * @param {String} localName\n\t * @param {String} xmlNamespace\n\t * @param {String} xmlName\n\t * @param {boolean} mutable\n\t * @returns void\n\t */\n\t_exposeProperty(localName, xmlNamespace, xmlName, mutable=false) {\n\t\tif (mutable) {\n\t\t\tObject.defineProperty(this, localName, {\n\t\t\t\tget: () => this._props[`{${xmlNamespace}}${xmlName}`],\n\t\t\t\tset: (val) => {\n\t\t\t\t\tthis._isDirty = true;\n\t\t\t\t\tthis._props[`{${xmlNamespace}}${xmlName}`] = val;\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tObject.defineProperty(this, localName, {\n\t\t\t\tget: () => this._props[`{${xmlNamespace}}${xmlName}`]\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * @returns {string[][]}\n\t */\n\tstatic getPropFindList() {\n\t\treturn [\n\t\t\t[NS.DAV, 'getcontenttype'],\n\t\t\t[NS.DAV, 'getetag'],\n\t\t\t[NS.DAV, 'resourcetype']\n\t\t];\n\t}\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport * as NS from '../utility/namespaceUtility.js'\nimport * as StringUtility from '../utility/stringUtility.js'\nimport * as XMLUtility from '../utility/xmlUtility.js'\nimport DAVEventListener from './davEventListener.js'\nimport davCollectionParser from \"../parser/davCollectionParser.js\"\n\nimport {debugFactory} from \"../debug.js\";\nimport davCollectionPropSet from \"../propset/davCollectionPropSet.js\";\nimport {DavObject} from \"./davObject.js\";\nconst debug = debugFactory('DavCollection');\n\nexport class DavCollection extends DAVEventListener {\n\n\t/**\n\t * @param {Object} parent\n\t * @param {Request} request\n\t * @param {String} url\n\t * @param {Object} props\n\t */\n\tconstructor(parent, request, url, props) {\n\t\tsuper();\n\n\t\tObject.assign(this, {\n\t\t\t// parameters\n\t\t\t_parent: parent,\n\t\t\t_request: request,\n\t\t\t_url: url,\n\t\t\t_rawProps: props,\n\t\t\t// parsed properties\n\t\t\t_props: {},\n\t\t\t// constructors\n\t\t\t_collectionFactoryMapper: {},\n\t\t\t_objectFactoryMapper: {},\n\t\t\t// house keeping\n\t\t\t_isDirty: false,\n\t\t\t_updatedProperties: [],\n\t\t\t_childrenNames: [],\n\n\t\t\t// parsers / factories\n\t\t\t_propFindList: [],\n\t\t\t_propSetFactory: [],\n\n\t\t});\n\n\t\tthis._registerPropFindParser(davCollectionParser);\n\t\tthis._registerPropSetFactory(davCollectionPropSet);\n\n\t\tthis._exposeProperty('displayname', NS.DAV, 'displayname', true);\n\t\tthis._exposeProperty('acl', NS.DAV, 'acl');\n\t\tthis._exposeProperty('owner', NS.DAV, 'owner');\n\t\tthis._exposeProperty('resourcetype', NS.DAV, 'resourcetype');\n\t\tthis._exposeProperty('syncToken', NS.DAV, 'sync-token');\n\n\t\tObject.defineProperty(this, 'url', {\n\t\t\tget: () => this._url\n\t\t});\n\t}\n\n\t/**\n\t * finds all children of a collection\n\t *\n\t * @returns {Promise<DavObject[]|DavCollection[]>}\n\t */\n\tasync findAll() {\n\t\tconst response = await this._request.propFind(this._url, this._propFindList, 1);\n\t\treturn this._handleMultiStatusResponse(response, false);\n\t}\n\n\t/**\n\t * finds all children of a collection filtered by filter\n\t *\n\t * @param {Function} filter\n\t * @returns {Promise<DavObject[]|DavCollection[]>}\n\t */\n\tasync findAllByFilter(filter) {\n\t\tconst all = await this.findAll();\n\t\treturn all.filter(filter);\n\t}\n\n\t/**\n\t * find one object by its uri\n\t *\n\t * @param {String} uri\n\t * @returns {Promise<DavObject|DavCollection>}\n\t */\n\tasync find(uri) {\n\t\tconst response = await this._request.propFind(this._url + uri, this._propFindList, 0);\n\t\treturn this._handleMultiStatusResponse({ [this._url + uri]: response }, false)[0];\n\t}\n\n\t/**\n\t * creates a new webdav collection\n\t * https://tools.ietf.org/html/rfc5689\n\t *\n\t * You usually don't want to call this method directly\n\t * but instead use:\n\t * - AddressBookHome->createAddressBookCollection\n\t * - CalendarHome->createCalendarCollection\n\t * - CalendarHome->createSubscribedCollection\n\t *\n\t * @param {string} name\n\t * @param {Array} props\n\t * @returns {Promise<DavCollection>}\n\t */\n\tasync createCollection(name, props) {\n\t\tdebug('creating a collection');\n\n\t\tconst [skeleton, dPropChildren] = XMLUtility.getRootSkeleton(\n\t\t\t[NS.DAV, 'mkcol'],\n\t\t\t[NS.DAV, 'set'],\n\t\t\t[NS.DAV, 'prop']\n\t\t);\n\n\t\tprops.forEach((prop) => {\n\t\t\tdPropChildren.push(prop);\n\t\t});\n\n\t\tconst uri = this._getAvailableNameFromToken(name);\n\t\tconst data = XMLUtility.serialize(skeleton);\n\t\tawait this._request.mkCol(this.url + uri, {}, data);\n\t\treturn this.find(uri);\n\t}\n\n\t/**\n\t * creates a new webdav object inside this collection\n\t *\n\t * You usually don't want to call this method directly\n\t * but instead use:\n\t * - AddressBook->createVCard\n\t * - Calendar->createVObject\n\t *\n\t * @param {String} name\n\t * @param {Object} headers\n\t * @param {String} data\n\t * @returns {Promise<DavObject>}\n\t */\n\tasync createObject(name, headers, data) {\n\t\tdebug('creating an object');\n\n\t\tawait this._request.put(this.url + name, headers, data);\n\t\treturn this.find(name);\n\t}\n\n\t/**\n\t * sends a PropPatch request to update the collections' properties\n\t * The request is only made if properties actually changed\n\t *\n\t * @returns {Promise<void>}\n\t */\n\tasync update() {\n\t\tif (this._updatedProperties.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst properties = {};\n\t\tthis._updatedProperties.forEach((updatedProperty) => {\n\t\t\tproperties[updatedProperty] = this._props[updatedProperty]\n\t\t});\n\t\tconst propSet = this._propSetFactory.reduce((arr, p) => [...arr, ...p(properties)], []);\n\n\t\tconst [skeleton, dPropSet] = XMLUtility.getRootSkeleton(\n\t\t\t[NS.DAV, 'propertyupdate'],\n\t\t\t[NS.DAV, 'set'],\n\t\t\t[NS.DAV, 'prop']);\n\n\t\tdPropSet.push(...propSet);\n\n\t\tconst body = XMLUtility.serialize(skeleton);\n\t\treturn this._request.propPatch(this._url, {}, body);\n\t}\n\n\t/**\n\t * deletes the DavCollection on the server\n\t *\n\t * @returns {Promise<void>}\n\t */\n\tasync delete() {\n\t\treturn this._request.delete(this._url);\n\t}\n\n\t/**\n\t * @protected\n\t * @param {String} identifier\n\t * @param {Function} factory\n\t * @returns void\n\t */\n\t_registerCollectionFactory(identifier, factory) {\n\t\tthis._collectionFactoryMapper[identifier] = factory;\n\t\tif (typeof factory.getPropFindList === 'function') {\n\t\t\tArray.prototype.push.apply(this._propFindList, factory.getPropFindList());\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t * @param {String} identifier\n\t * @param {Function} factory\n\t * @returns void\n\t */\n\t_registerObjectFactory(identifier, factory) {\n\t\tthis._objectFactoryMapper[identifier] = factory;\n\t\tif (typeof factory.getPropFindList === 'function') {\n\t\t\tArray.prototype.push.apply(this._propFindList, factory.getPropFindList());\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t * @param {Function} parser\n\t * @returns void\n\t */\n\t_registerPropFindParser(parser) {\n\t\tObject.assign(this._props, parser(this._rawProps));\n\t}\n\n\t/**\n\t * @protected\n\t * @param factory\n\t * @returns void\n\t */\n\t_registerPropSetFactory(factory) {\n\t\tthis._propSetFactory.push(factory);\n\t}\n\n\t/**\n\t * @protected\n\t * @param {String} localName\n\t * @param {String} xmlNamespace\n\t * @param {String} xmlName\n\t * @param {boolean} mutable\n\t * @returns void\n\t */\n\t_exposeProperty(localName, xmlNamespace, xmlName, mutable=false) {\n\t\tif (mutable) {\n\t\t\tObject.defineProperty(this, localName, {\n\t\t\t\tget: () => this._props[`{${xmlNamespace}}${xmlName}`],\n\t\t\t\tset: (val) => {\n\t\t\t\t\tthis._props[`{${xmlNamespace}}${xmlName}`] = val;\n\t\t\t\t\tif (this._updatedProperties.indexOf(`{${xmlNamespace}}${xmlName}`) === -1) {\n\t\t\t\t\t\tthis._updatedProperties.push(`{${xmlNamespace}}${xmlName}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tObject.defineProperty(this, localName, {\n\t\t\t\tget: () => this._props[`{${xmlNamespace}}${xmlName}`]\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t * @param {String} token\n\t * @returns {String}\n\t */\n\t_getAvailableNameFromToken(token) {\n\t\treturn StringUtility.uri(token, name => {\n\t\t\treturn this._childrenNames.indexOf(this._url + name) === -1 &&\n\t\t\t\tthis._childrenNames.indexOf(this._url + name + '/') === -1;\n\t\t});\n\t}\n\n\t/**\n\t * @param {Object} response\n\t * @param {Boolean} isPartial\n\t * @returns {Object}\n\t * @protected\n\t */\n\t_handleMultiStatusResponse(response, isPartial=false) {\n\t\tconst index = [];\n\t\tconst children = [];\n\n\t\tObject.entries(response).forEach(([path, props]) => {\n\t\t\t// The DAV Server will always return a propStat\n\t\t\t// block containing properties of the current url\n\t\t\t// we are not interested, so let's filter it out\n\t\t\tif (path === this._url) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tindex.push(path);\n\t\t\tconst url = this._request.pathname(path);\n\n\t\t\t// empty resourcetype property => this is no collection\n\t\t\tif (props['{DAV:}resourcetype'] === '') {\n\t\t\t\tdebug(`${path} was identified as a file`);\n\n\t\t\t\tconst contentType = props['{DAV:}getcontenttype'].split(';')[0];\n\t\t\t\tif (!this._objectFactoryMapper[contentType]) {\n\t\t\t\t\tdebug(`No constructor for content-type ${contentType} (${path}) registered, treating as generic object`);\n\t\t\t\t\tchildren.push(new DavObject(this, this._request, url, props));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tchildren.push(new this._objectFactoryMapper[contentType](this, this._request, url, props, isPartial));\n\t\t\t} else {\n\t\t\t\tdebug(`${path} was identified as a collection`);\n\n\t\t\t\tconst collectionType = getCollectionType(props);\n\t\t\t\tif (!collectionType) {\n\t\t\t\t\tdebug(`Collection-type of ${path} was not specified, treating as generic collection`);\n\t\t\t\t\tchildren.push(new DavCollection(this, this._request, url, props));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!this._collectionFactoryMapper[collectionType]) {\n\t\t\t\t\tdebug(`No constructor for collection-type ${collectionType} (${path}) registered, treating as generic collection`);\n\t\t\t\t\tchildren.push(new DavCollection(this, this._request, url, props));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tchildren.push(new this._collectionFactoryMapper[collectionType](this, this._request, url, props));\n\t\t\t}\n\t\t});\n\n\t\tthis._childrenNames.push(...index);\n\t\treturn children;\n\n\t}\n\n\t/**\n\t * A list of all property names that should be included\n\t * in propfind requests that may include this collection\n\t *\n\t * @returns {string[][]}\n\t */\n\tstatic getPropFindList() {\n\t\treturn [\n\t\t\t[NS.DAV, 'acl'],\n\t\t\t[NS.DAV, 'displayname'],\n\t\t\t[NS.DAV, 'owner'],\n\t\t\t[NS.DAV, 'resourcetype'],\n\t\t\t[NS.DAV, 'sync-token'],\n\t\t\t[NS.DAV, 'current-user-privilege-set']\n\t\t];\n\t}\n}\n\n/**\n *\n */\nfunction getCollectionType(props) {\n\tif (!props['{' + NS.DAV + '}resourcetype']) {\n\t\treturn null;\n\t}\n\n\tconst type = props['{' + NS.DAV + '}resourcetype'].find((e) => {\n\t\treturn (getNodesClarkeName(e) !== '{' + NS.DAV + '}collection');\n\t});\n\tif (!type) {\n\t\treturn null;\n\t}\n\n\treturn getNodesClarkeName(type);\n}\n\n/**\n *\n * @param node\n * @returns {string}\n */\nfunction getNodesClarkeName(node) {\n\treturn '{' + node.namespaceURI + '}' + node.localName;\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport * as NS from \"../utility/namespaceUtility.js\";\n\n/**\n *\n * This parser is capable of parsing:\n * - {http://calendarserver.org/ns/}publish-url\n *\n * @param {Object} props\n * @return {Object}\n */\nexport default function davCollectionPublishableParser(props) {\n\tconst parsed = {};\n\n\tObject.entries(props).forEach(([key, value]) => {\n\t\tswitch (key) {\n\t\t\tcase '{http://calendarserver.org/ns/}publish-url':\n\t\t\t\tparsed[key] = publishUrl(value);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\treturn parsed;\n}\n\n\n/**\n *\n * @param value property node for {http://calendarserver.org/ns/}publish-url\n * @returns {*}\n */\nfunction publishUrl(value) {\n\tif (!Array.isArray(value)) {\n\t\treturn;\n\t}\n\tif (value.length < 1) {\n\t\treturn;\n\t}\n\n\treturn value[0].textContent;\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport * as NS from \"../utility/namespaceUtility.js\";\nimport * as XMLUtility from '../utility/xmlUtility.js';\nimport davCollectionPublishableParser from \"../parser/davCollectionPublishableParser.js\";\n\nimport {debugFactory} from \"../debug.js\";\nconst debug = debugFactory('DavCollectionPublishable');\n\nexport function davCollectionPublishable(Base) {\n\treturn class extends Base {\n\n\t\t/**\n\t\t * @inheritDoc\n\t\t */\n\t\tconstructor(...args) {\n\t\t\tsuper(...args);\n\n\t\t\tsuper._registerPropFindParser(davCollectionPublishableParser);\n\t\t}\n\n\t\t/**\n\t\t * publishes the DavCollection\n\t\t *\n\t\t * @returns {Promise<Base>}\n\t\t */\n\t\tasync publish() {\n\t\t\tdebug(`Publishing ${super.url}`);\n\n\t\t\tconst [skeleton] = XMLUtility.getRootSkeleton(\n\t\t\t\t[NS.CALENDARSERVER, 'publish-calendar']);\n\t\t\tconst xml = XMLUtility.serialize(skeleton);\n\n\t\t\tawait super._request.post(this._url, {\n\t\t\t\t'Content-Type' : 'application/xml; charset=utf-8'\n\t\t\t}, xml);\n\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n\t\t * unpublishes the DavCollection\n\t\t *\n\t\t * @returns {Promise<Base>}\n\t\t */\n\t\tasync unpublish() {\n\t\t\tdebug(`Unpublishing ${super.url}`);\n\n\t\t\tconst [skeleton] = XMLUtility.getRootSkeleton(\n\t\t\t\t[NS.CALENDARSERVER, 'unpublish-calendar']);\n\t\t\tconst xml = XMLUtility.serialize(skeleton);\n\n\t\t\tawait super._request.post(this._url, {\n\t\t\t\t'Content-Type' : 'application/xml; charset=utf-8'\n\t\t\t}, xml);\n\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n\t\t * @inheritDoc\n\t\t */\n\t\tstatic getPropFindList() {\n\t\t\treturn super.getPropFindList().concat([\n\t\t\t\t[NS.CALENDARSERVER, 'publish-url']\n\t\t\t]);\n\t\t}\n\t}\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport * as NS from \"../utility/namespaceUtility.js\";\n\n/**\n *\n * This parser is capable of parsing:\n * - {http://owncloud.org/ns}invite\n * - {http://calendarserver.org/ns/}allowed-sharing-modes\n *\n * @param {Object} props\n * @return {Object}\n */\nexport default function davCollectionShareableParser(props) {\n\tconst parsed = {};\n\n\tObject.entries(props).forEach(([key, value]) => {\n\t\tswitch (key) {\n\t\t\tcase '{http://owncloud.org/ns}invite':\n\t\t\t\tparsed[key] = invite(value);\n\t\t\t\tbreak;\n\n\t\t\tcase '{http://calendarserver.org/ns/}allowed-sharing-modes':\n\t\t\t\tparsed[key] = allowedSharingModes(value);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\treturn parsed;\n}\n\n/**\n *\n * @param value property node for {http://owncloud.org/ns}invite\n * @returns {*}\n */\nfunction invite(value) {\n\tif (!Array.isArray(value)) {\n\t\treturn;\n\t}\n\n\tconst shares = [];\n\tvalue.forEach((s) => {\n\t\tlet href = s.getElementsByTagNameNS(NS.DAV, 'href');\n\t\tif (href.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\thref = href[0].textContent;\n\n\t\tlet displayName = s.getElementsByTagNameNS(NS.OWNCLOUD, 'common-name');\n\t\tif (displayName.length === 0) {\n\t\t\tdisplayName = null;\n\t\t} else {\n\t\t\tdisplayName = displayName[0].textContent;\n\t\t}\n\n        let access = s.getElementsByTagNameNS(NS.OWNCLOUD, 'access');\n        if (access.length === 0) {\n            return;\n        }\n        access = access[0];\n\n        const readWrite = access.getElementsByTagNameNS(NS.OWNCLOUD, 'read-write');\n        const writable = readWrite.length !== 0;\n\n\t\tshares.push({\n\t\t\thref,\n\t\t\tdisplayName,\n\t\t\twritable\n\t\t})\n\t});\n\n\treturn shares;\n}\n\n/**\n *\n * @param value property node for {http://calendarserver.org/ns/}allowed-sharing-modes\n * @returns {*}\n */\nfunction allowedSharingModes(value) {\n\tif (!Array.isArray(value)) {\n\t\treturn;\n\t}\n\n\treturn value.map((v) => {\n\t\treturn `{${v.namespaceURI}}${v.localName}`;\n\t});\n}\n\n\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport * as NS from '../utility/namespaceUtility.js';\nimport * as XMLUtility from '../utility/xmlUtility.js';\nimport davCollectionShareableParser from \"../parser/davCollectionShareableParser.js\";\n\nimport {debugFactory} from \"../debug.js\";\nconst debug = debugFactory('DavCollectionShareable');\n\nexport function davCollectionShareable(Base) {\n\treturn class extends Base {\n\n\t\t/**\n\t\t * @inheritDoc\n\t\t */\n\t\tconstructor(...args) {\n\t\t\tsuper(...args);\n\n\t\t\tsuper._registerPropFindParser(davCollectionShareableParser);\n\n\t\t}\n\n\t\t/**\n\t\t * shares a DavCollection\n\t\t *\n\t\t * @param {string} principalUri\n\t\t * @param {boolean} readWrite\n\t\t * @param {string} summary\n\t\t * @returns {Promise<Base>}\n\t\t */\n\t\tasync share(principalUri, readWrite, summary) {\n\t\t\tdebug(`Sharing ${super.url} with ${principalUri}`);\n\n\t\t\tconst [skeleton, oSetChildren] = XMLUtility.getRootSkeleton(\n\t\t\t\t[NS.OWNCLOUD, 'share'], [NS.OWNCLOUD, 'set']);\n\n\t\t\toSetChildren.push({\n\t\t\t\tname: [NS.DAV, 'href'],\n\t\t\t\tvalue: principalUri\n\t\t\t});\n\n\t\t\tif (readWrite) {\n\t\t\t\toSetChildren.push({\n\t\t\t\t\tname: [NS.OWNCLOUD, 'read-write']\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (summary) {\n\t\t\t\toSetChildren.push({\n\t\t\t\t\tname: [NS.OWNCLOUD, 'summary'],\n\t\t\t\t\tvalue: summary\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst xml = XMLUtility.serialize(skeleton);\n\t\t\treturn super._request.post(this._url, {\n\t\t\t\t'Content-Type' : 'application/xml; charset=utf-8'\n\t\t\t}, xml).then((res) => {\n\t\t\t\t// TODO - add to existing data\n\n\t\t\t\treturn this;\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * unshares a DAVCollection\n\t\t *\n\t\t * @param {string} principalUri\n\t\t * @returns {Promise<Base>}\n\t\t */\n\t\tasync unshare(principalUri) {\n\t\t\tdebug(`Unsharing ${super.url} with ${principalUri}`);\n\n\t\t\tconst [skeleton, oSetChildren] = XMLUtility.getRootSkeleton(\n\t\t\t\t[NS.OWNCLOUD, 'share'], [NS.OWNCLOUD, 'remove']);\n\n\t\t\toSetChildren.push({\n\t\t\t\tname: [NS.DAV, 'href'],\n\t\t\t\tvalue: principalUri\n\t\t\t});\n\n\t\t\tconst xml = XMLUtility.serialize(skeleton);\n\t\t\treturn super._request.post(this._url, {\n\t\t\t\t'Content-Type' : 'application/xml; charset=utf-8'\n\t\t\t}, xml).then((res) => {\n\t\t\t\t// TODO - add to existing data\n\n\t\t\t\treturn this;\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * @returns {Boolean}\n\t\t */\n\t\tisShareable() {\n\t\t\t// TODO implement me\n\t\t}\n\n\t\t/**\n\t\t * @returns {Boolean}\n\t\t */\n\t\tisPublishable() {\n\t\t\t// TODO implement me\n\t\t}\n\n\t\t/**\n\t\t * @inheritDoc\n\t\t */\n\t\tstatic getPropFindList() {\n\t\t\treturn super.getPropFindList().concat([\n\t\t\t\t[NS.OWNCLOUD, 'invite'],\n\t\t\t\t[NS.CALENDARSERVER, 'allowed-sharing-modes']\n\t\t\t]);\n\t\t}\n\t}\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport {DavObject} from \"./davObject.js\";\nimport * as NS from \"../utility/namespaceUtility.js\";\n\n/**\n * @class\n */\nexport class VObject extends DavObject {\n\n\t/**\n\t * Creates a VObject that is supposed to store calendar-data\n\t * as specified in RFC 5545.\n\t *\n\t * https://tools.ietf.org/html/rfc5545\n\t *\n\t * @inheritDoc\n\t */\n\tconstructor(...args) {\n\t\tsuper(...args);\n\n\t\tsuper._exposeProperty('data', NS.IETF_CALDAV, 'calendar-data', true);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic getPropFindList() {\n\t\treturn super.getPropFindList().concat([\n\t\t\t[NS.IETF_CALDAV, 'calendar-data'],\n\t\t]);\n\t}\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n/**\n *\n * This parser is capable of parsing:\n * - {http://apple.com/ns/ical/}calendar-order\n * - {http://apple.com/ns/ical/}calendar-color\n * - {http://calendarserver.org/ns/}getctag\n * - {http://calendarserver.org/ns/}source\n * - {urn:ietf:params:xml:ns:caldav}calendar-description\n * - {urn:ietf:params:xml:ns:caldav}calendar-timezone\n * - {urn:ietf:params:xml:ns:caldav}supported-calendar-component-set\n * - {urn:ietf:params:xml:ns:caldav}supported-calendar-data\n * - {urn:ietf:params:xml:ns:caldav}max-resource-size\n * - {urn:ietf:params:xml:ns:caldav}min-date-time\n * - {urn:ietf:params:xml:ns:caldav}max-date-time\n * - {urn:ietf:params:xml:ns:caldav}max-instances\n * - {urn:ietf:params:xml:ns:caldav}max-attendees-per-instance\n * - {urn:ietf:params:xml:ns:caldav}supported-collation-set\n * - {http://owncloud.org/ns}calendar-enabled\n * - {http://nextcloud.com/ns}owner-displayname\n *\n * @param {Object} props\n * @return {Object}\n */\nexport default function calendarParser(props) {\n\tconst parsed = {};\n\n\tObject.entries(props).forEach(([key, value]) => {\n\t\tswitch (key) {\n\t\t\tcase '{http://apple.com/ns/ical/}calendar-color':\n\t\t\t\tparsed[key] = calendarColor(value);\n\t\t\t\tbreak;\n\n\t\t\tcase '{http://calendarserver.org/ns/}getctag':\n\t\t\tcase '{http://nextcloud.com/ns}owner-displayname':\n\t\t\tcase '{urn:ietf:params:xml:ns:caldav}calendar-description':\n\t\t\tcase '{urn:ietf:params:xml:ns:caldav}calendar-timezone':\n\t\t\t\tparsed[key] = simpleText(value);\n\t\t\t\tbreak;\n\n\t\t\tcase '{http://apple.com/ns/ical/}calendar-order':\n\t\t\tcase '{urn:ietf:params:xml:ns:caldav}max-resource-size':\n\t\t\tcase '{urn:ietf:params:xml:ns:caldav}max-instances':\n\t\t\tcase '{urn:ietf:params:xml:ns:caldav}max-attendees-per-instance':\n\t\t\t\tparsed[key] = simpleInt(value);\n\t\t\t\tbreak;\n\n\t\t\tcase '{http://calendarserver.org/ns/}source':\n\t\t\t\tparsed[key] = source(value);\n\t\t\t\tbreak;\n\n\t\t\tcase '{urn:ietf:params:xml:ns:caldav}supported-calendar-component-set':\n\t\t\t\tparsed[key] = supportedCalendarComponentSet(value);\n\t\t\t\tbreak;\n\n\t\t\tcase '{urn:ietf:params:xml:ns:caldav}supported-calendar-data':\n\t\t\t\tparsed[key] = supportedCalendarData(value);\n\t\t\t\tbreak;\n\n\t\t\tcase '{urn:ietf:params:xml:ns:caldav}min-date-time':\n\t\t\t\tparsed[key] = dateTime(value);\n\t\t\t\tbreak;\n\n\t\t\tcase '{urn:ietf:params:xml:ns:caldav}max-date-time':\n\t\t\t\tparsed[key] = dateTime(value);\n\t\t\t\tbreak;\n\n\t\t\tcase '{urn:ietf:params:xml:ns:caldav}supported-collation-set':\n\t\t\t\tparsed[key] = supportedCollationSet(value);\n\t\t\t\tbreak;\n\n\t\t\tcase '{http://owncloud.org/ns}calendar-enabled':\n\t\t\t\tparsed[key] = simpleBool(value);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\treturn parsed;\n}\n\nfunction simpleText(prop) {\n\treturn prop;\n}\n\nfunction simpleInt(prop) {\n\treturn parseInt(prop, 10);\n}\n\nfunction simpleBool(prop) {\n\treturn prop === '1';\n}\n\nfunction calendarColor(prop) {\n\t// some stupid clients store an alpha value in the rgb hash (like #rrggbbaa) *cough cough* Apple Calendar *cough cough*\n\t// but some browsers can't parse that *cough cough* Safari 9 *cough cough*\n\t// Safari 10 seems to support this though\n\tif (prop.length === 9) {\n\t\treturn prop.substr(0,7);\n\t}\n\n\treturn prop;\n}\n\nfunction source(prop) {\n\n}\n\nfunction supportedCalendarComponentSet(prop) {\n\tconst simpleComponents = {\n\t\tvevent: false,\n\t\tvjournal: false,\n\t\tvtodo: false\n\t};\n\n\tprop.forEach(function(component) {\n\t\tconst name = component.attributes.getNamedItem('name').textContent.toLowerCase();\n\n\t\tif (simpleComponents.hasOwnProperty(name)) {\n\t\t\tsimpleComponents[name] = true;\n\t\t}\n\t});\n\n\treturn simpleComponents;\n}\n\nfunction supportedCalendarData(prop) {\n\tif (!Array.isArray(prop)) {\n\t\treturn;\n\t}\n\n\treturn prop.map((v) => {\n\t\treturn {\n\t\t\t'content-type': v.getAttribute('content-type'),\n\t\t\t'version': v.getAttribute('version')\n\t\t};\n\t});\n}\n\nfunction dateTime(prop) {\n\tconst year = parseInt(prop.substr(0, 4), 10);\n\tconst month = parseInt(prop.substr(4, 2), 10) - 1;\n\tconst date = parseInt(prop.substr(6, 2), 10);\n\n\tconst hour = parseInt(prop.substr(9, 2), 10);\n\tconst minute = parseInt(prop.substr(11, 2), 10);\n\tconst second = parseInt(prop.substr(13, 2), 10);\n\n\tconst dateObj = new Date();\n\tdateObj.setUTCFullYear(year, month, date);\n\tdateObj.setUTCHours(hour, minute, second, 0);\n\treturn dateObj;\n}\n\nfunction supportedCollationSet(prop) {\n\tif (!Array.isArray(prop)) {\n\t\treturn;\n\t}\n\n\treturn prop.map((v) => v.textContent);\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport * as NS from \"../utility/namespaceUtility.js\";\n\n/**\n *\n * This function is capable of creating the propset xml structure for:\n * - {http://apple.com/ns/ical/}calendar-order\n * - {http://apple.com/ns/ical/}calendar-color\n * - {http://calendarserver.org/ns/}source\n * - {urn:ietf:params:xml:ns:caldav}calendar-description\n * - {urn:ietf:params:xml:ns:caldav}calendar-timezone\n * - {http://owncloud.org/ns}calendar-enabled\n *\n * @param {Object} props\n * @return {Object}\n */\nexport default function calendarPropSet(props) {\n\tconst xmlified = [];\n\n\tObject.entries(props).forEach(([key, value]) => {\n\t\tswitch (key) {\n\t\t\tcase '{http://apple.com/ns/ical/}calendar-order':\n\t\t\t\txmlified.push({\n\t\t\t\t\tname: [NS.APPLE, 'calendar-order'],\n\t\t\t\t\tvalue: value\n\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase '{http://apple.com/ns/ical/}calendar-color':\n\t\t\t\txmlified.push({\n\t\t\t\t\tname: [NS.APPLE, 'calendar-color'],\n\t\t\t\t\tvalue: value\n\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase '{http://calendarserver.org/ns/}source':\n\t\t\t\txmlified.push({\n\t\t\t\t\tname: [NS.CALENDARSERVER, 'source'],\n\t\t\t\t\tchildren: [{\n\t\t\t\t\t\tname: [NS.DAV, 'href'],\n\t\t\t\t\t\tvalue: value\n\t\t\t\t\t}]\n\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase '{urn:ietf:params:xml:ns:caldav}calendar-description':\n\t\t\t\txmlified.push({\n\t\t\t\t\tname: [NS.IETF_CALDAV, 'calendar-description'],\n\t\t\t\t\tvalue: value\n\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase '{urn:ietf:params:xml:ns:caldav}calendar-timezone':\n\t\t\t\txmlified.push({\n\t\t\t\t\tname: [NS.IETF_CALDAV, 'calendar-timezone'],\n\t\t\t\t\tvalue: value\n\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase '{http://owncloud.org/ns}calendar-enabled':\n\t\t\t\txmlified.push({\n\t\t\t\t\tname: [NS.OWNCLOUD, 'calendar-enabled'],\n\t\t\t\t\tvalue: value ? '1' : '0'\n\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\treturn xmlified;\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport {DavCollection} from \"./davCollection.js\";\nimport {davCollectionPublishable} from \"./davCollectionPublishable.js\";\nimport {davCollectionShareable} from \"./davCollectionShareable.js\";\nimport {VObject} from \"./vobject.js\";\nimport calendarParser from \"../parser/calendarParser.js\";\nimport calendarPropSet from \"../propset/calendarPropSet.js\";\nimport * as NS from \"../utility/namespaceUtility.js\";\nimport * as StringUtility from \"../utility/stringUtility.js\";\nimport * as XMLUtility from \"../utility/xmlUtility.js\";\n\nimport {debugFactory} from \"../debug.js\";\nconst debug = debugFactory('Calendar');\n\n/**\n * This class represents an calendar collection as specified in\n * https://tools.ietf.org/html/rfc4791#section-4.2\n *\n * On top of all the properties provided by davCollectionShareable,\n * davCollectionPublishable and DavCollection,\n * It allows you access to the following list of properties:\n * - color\n * - enabled\n * - order\n * - timezone\n * - components\n *\n * The first four allowing read-write access\n *\n * @augments DavCollection\n */\nexport class Calendar extends davCollectionPublishable(davCollectionShareable(DavCollection)) {\n\n    /**\n\t * @inheritDoc\n\t */\n\tconstructor(...args) {\n\t\tsuper(...args);\n\n        super._registerObjectFactory('text/calendar', VObject);\n        super._registerPropFindParser(calendarParser);\n        super._registerPropSetFactory(calendarPropSet);\n\n        super._exposeProperty('color', NS.APPLE, 'calendar-color', true);\n        super._exposeProperty('enabled', NS.OWNCLOUD, 'calendar-enabled', true);\n        super._exposeProperty('order', NS.APPLE, 'calendar-order', true);\n        super._exposeProperty('timezone', NS.IETF_CALDAV, 'calendar-timezone', true);\n        super._exposeProperty('components', NS.IETF_CALDAV, 'supported-calendar-component-set');\n    }\n\n\t/**\n\t * finds all VObjects in this calendar\n\t *\n\t * @returns {Promise<VObject[]>}\n\t */\n\tasync findAllVObjects() {\n\t\treturn super.findAllByFilter((elm) => elm instanceof VObject);\n\t}\n\n    /**\n     * find all VObjects filtered by type\n\t *\n     * @param {number} type\n     * @returns {Promise<VObject[]>}\n     */\n    async findByType(type) {\n    \treturn this.calendarQuery([{\n\t\t\tname: [NS.IETF_CALDAV, 'comp-filter'],\n\t\t\tattributes: [\n\t\t\t\t['name', 'VCALENDAR']\n\t\t\t],\n\t\t\tchildren: [{\n\t\t\t\tname: [NS.IETF_CALDAV, 'comp-filter'],\n\t\t\t\tattributes: [\n\t\t\t\t\t['name', type]\n\t\t\t\t]\n\t\t\t}]\n\t\t}]);\n    }\n\n    /**\n     * find all VObjects in a time-range filtered by type\n\t *\n     * @param {number} type\n     * @param {Date} from\n     * @param {Date} to\n     * @returns {Promise<VObject[]>}\n     */\n    async findByTypeInTimeRange(type, from, to) {\n\t\treturn this.calendarQuery([{\n\t\t\tname: [NS.IETF_CALDAV, 'comp-filter'],\n\t\t\tattributes: [\n\t\t\t\t['name', 'VCALENDAR']\n\t\t\t],\n\t\t\tchildren: [{\n\t\t\t\tname: [NS.IETF_CALDAV, 'comp-filter'],\n\t\t\t\tattributes: [\n\t\t\t\t\t['name', type]\n\t\t\t\t],\n\t\t\t\tchildren: [{\n\t\t\t\t\tname: [NS.IETF_CALDAV, 'time-range'],\n\t\t\t\t\tattributes: [\n\t\t\t\t\t\t['start', Calendar._getICalendarDateTimeFromDateObject(from)],\n\t\t\t\t\t\t['end', Calendar._getICalendarDateTimeFromDateObject(to)]\n\t\t\t\t\t]\n\t\t\t\t}]\n\t\t\t}]\n\t\t}]);\n    }\n\n    /**\n     * create a VObject inside this calendar\n\t *\n     * @returns {Promise<VObject>}\n     */\n    async createVObject(data) {\n        const name = StringUtility.uid('', 'ics');\n        const headers = {\n            'Content-Type': 'text/calendar; charset=utf-8'\n        };\n\n        return super.createObject(name, headers, data);\n    }\n\n\t/**\n\t * sends a calendar query as defined in\n\t * https://tools.ietf.org/html/rfc4791#section-7.8\n\t *\n\t * @param {Object[]} filter\n\t * @param {Object[]} prop\n\t * @param {String} timezone\n\t * @returns {Promise<VObject[]>}\n\t */\n\tasync calendarQuery(filter, prop=null, timezone = null) {\n\t\tdebug('sending an calendar-query request');\n\n\t\tconst [skeleton, ] = XMLUtility.getRootSkeleton(\n\t\t\t[NS.IETF_CALDAV, 'calendar-query']\n\t\t);\n\n\t\tif (!prop) {\n\t\t\tskeleton.children.push({\n\t\t\t\tname: [NS.DAV, 'prop'],\n\t\t\t\tchildren: super._propFindList,\n\t\t\t});\n\t\t} else {\n\t\t\tskeleton.children.push({\n\t\t\t\tname: [NS.DAV, 'prop'],\n\t\t\t\tchildren: prop\n\t\t\t});\n\t\t}\n\n\t\t// According to the spec, every calendar query needs a filter,\n\t\t// but Nextcloud just returns all elements without a filter.\n\t\tif (filter) {\n\t\t\tskeleton.children.push(filter);\n\t\t}\n\n\t\tif (timezone) {\n\t\t\tskeleton.children.push({\n\t\t\t\tname: [NS.IETF_CALDAV, 'timezone'],\n\t\t\t\tvalue: timezone\n\t\t\t});\n\t\t}\n\n\t\tconst headers = {\n\t\t\t'Depth': '1'\n\t\t};\n\t\tconst body = XMLUtility.serialize(skeleton);\n\t\tconst response = await this._request.report(this.url, headers, body);\n\t\treturn super._handleMultiStatusResponse(response, Calendar._isRetrievalPartial(prop));\n\t}\n\n\t/**\n\t * sends a calendar multiget query as defined in\n\t * https://tools.ietf.org/html/rfc4791#section-7.9\n\t *\n\t * @param {String[]} hrefs\n\t * @param {Object[]} prop\n\t * @returns {Promise<VObject[]>}\n\t */\n\tasync calendarMultiget(hrefs=[], prop) {\n\t\tdebug('sending an calendar-multiget request');\n\n\t\tif (hrefs.length === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst [skeleton, ] = XMLUtility.getRootSkeleton(\n\t\t\t[NS.IETF_CALDAV, 'calendar-multiget'],\n\t\t);\n\n\t\tif (!prop) {\n\t\t\tskeleton.children.push({\n\t\t\t\tname: [NS.DAV, 'prop'],\n\t\t\t\tchildren: super._propFindList,\n\t\t\t});\n\t\t} else {\n\t\t\tskeleton.children.push({\n\t\t\t\tname: [NS.DAV, 'prop'],\n\t\t\t\tchildren: prop\n\t\t\t})\n\t\t}\n\n\t\threfs.forEach((href) => {\n\t\t\tskeleton.children.push({\n\t\t\t\tname: [NS.DAV, 'href'],\n\t\t\t\tvalue: href\n\t\t\t});\n\t\t});\n\n\t\tconst headers = {\n\t\t\t'Depth': '1'\n\t\t};\n\t\tconst body = XMLUtility.serialize(skeleton);\n\t\tconst response = await this._request.report(this.url, headers, body);\n\t\treturn super._handleMultiStatusResponse(response, Calendar._isRetrievalPartial(prop));\n\t}\n\n\t/**\n\t * sends a calendar free-busy-query as defined in\n\t * https://tools.ietf.org/html/rfc4791#section-7.10\n\t *\n\t * @param {Date} from\n\t * @param {Date} to\n\t * @returns {Promise<String>}\n\t */\n\tasync freeBusyQuery(from, to) {\n\t\tdebug('sending a free-busy-query request');\n\n\t\tconst [skeleton, ] = XMLUtility.getRootSkeleton(\n\t\t\t[NS.IETF_CALDAV, 'free-busy-query'],\n\t\t\t[NS.IETF_CALDAV, 'time-range']\n\t\t);\n\n\t\tskeleton[0][0].attributes.push(['start', Calendar._getICalendarDateTimeFromDateObject(from)]);\n\t\tskeleton[0][0].attributes.push(['end', Calendar._getICalendarDateTimeFromDateObject(to)]);\n\n\t\tconst headers = {\n\t\t\t'Depth': '1'\n\t\t};\n\t\tconst body = XMLUtility.serialize(skeleton);\n\t\tconst response = await this._request.report(this.url, headers, body);\n\n\t\t// TODO - finish implementation\n\t}\n\n    /**\n     * @inheritDoc\n     */\n    static getPropFindList() {\n        return super.getPropFindList().concat([\n            [NS.APPLE, 'calendar-order'],\n            [NS.APPLE, 'calendar-color'],\n            [NS.CALENDARSERVER, 'getctag'],\n            [NS.CALENDARSERVER, 'source'],\n            [NS.IETF_CALDAV, 'calendar-description'],\n            [NS.IETF_CALDAV, 'calendar-timezone'],\n            [NS.IETF_CALDAV, 'supported-calendar-component-set'],\n            [NS.IETF_CALDAV, 'supported-calendar-data'],\n            [NS.IETF_CALDAV, 'max-resource-size'],\n            [NS.IETF_CALDAV, 'min-date-time'],\n            [NS.IETF_CALDAV, 'max-date-time'],\n            [NS.IETF_CALDAV, 'max-instances'],\n            [NS.IETF_CALDAV, 'max-attendees-per-instance'],\n            [NS.IETF_CALDAV, 'supported-collation-set'],\n            [NS.IETF_CALDAV, 'calendar-free-busy-set'],\n            [NS.IETF_CALDAV, 'schedule-calendar-transp'],\n            [NS.IETF_CALDAV, 'schedule-default-calendar-URL'],\n            [NS.OWNCLOUD, 'calendar-enabled'],\n            [NS.NEXTCLOUD, 'owner-displayname']\n        ]);\n    }\n\n\t/**\n\t * checks if the prop part of a report requested partial data\n\t *\n\t * @param {Object[]} prop\n\t * @returns {boolean}\n\t * @private\n\t */\n\tstatic _isRetrievalPartial(prop) {\n\t\tif (!prop) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst addressBookDataProperty = prop.find((p) => {\n\t\t\treturn p.name[0] === NS.IETF_CALDAV && p.name[1] === 'calendar-data';\n\t\t});\n\n\t\tif (!addressBookDataProperty) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!addressBookDataProperty.children;\n\t}\n\n\t/**\n\t * creates an iCalendar formatted DATE-TIME string from a date object\n\t *\n\t * @param {Date} date\n\t * @return {String}\n\t * @private\n\t */\n\tstatic _getICalendarDateTimeFromDateObject(date) {\n\t\treturn [\n\t\t\tdate.getUTCFullYear(),\n\t\t\t('0' + (date.getUTCMonth() + 1)).slice(-2),\n\t\t\t('0' + date.getUTCDate()).slice(-2),\n\t\t\t'T',\n\t\t\t('0' + date.getUTCHours()).slice(-2),\n\t\t\t('0' + date.getUTCMinutes()).slice(-2),\n\t\t\t('0' + date.getUTCSeconds()).slice(-2),\n\t\t\t'Z'\n\t\t].join('');\n\t}\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport {DavCollection} from \"./davCollection.js\";\n\nexport class Subscription extends DavCollection {\n\t// TODO implement me\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport {DavCollection} from \"./davCollection.js\";\n\nexport default class ScheduleInbox extends DavCollection {\n\t// TODO implement me\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport {DavCollection} from \"./davCollection.js\";\n\nexport default class ScheduleOutbox extends DavCollection {\n\t// TODO implement me\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {DavCollection} from \"./davCollection.js\";\nimport {Calendar} from \"./calendar.js\";\nimport {Subscription} from \"./subscription.js\";\nimport ScheduleInbox from \"./scheduleInbox.js\";\nimport ScheduleOutbox from \"./scheduleOutbox.js\";\nimport * as NS from '../utility/namespaceUtility.js'\n\nimport {debugFactory} from \"../debug.js\";\nconst debug = debugFactory('CalendarHome');\n\n/**\n * This class represents a calendar home as specified in\n * https://tools.ietf.org/html/rfc4791#section-6.2.1\n *\n * As of this versions' release, the Nextcloud server will always\n * return only one calendar home. Despite that, RFC4791 allows\n * a server to return multiple calendar homes though.\n */\nexport class CalendarHome extends DavCollection {\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor(...args) {\n\t\tsuper(...args);\n\n        super._registerCollectionFactory('{' + NS.IETF_CALDAV + '}calendar', Calendar);\n        super._registerCollectionFactory('{' + NS.CALENDARSERVER + '}subscribed', Subscription);\n        super._registerCollectionFactory('{' + NS.IETF_CALDAV + '}schedule-inbox', ScheduleInbox);\n        super._registerCollectionFactory('{' + NS.IETF_CALDAV + '}schedule-outbox', ScheduleOutbox);\n    }\n\n\t/**\n\t * finds all CalDAV-specific collections in this calendar home\n\t *\n\t * @returns {Promise<Calendar[]|Subscription[]|ScheduleInbox[]|ScheduleOutbox[]>}\n\t */\n\tasync findAllCalDAVCollections() {\n\t\treturn super.findAllByFilter((elm) => elm instanceof Calendar || elm instanceof Subscription ||\n\t\t\telm instanceof ScheduleInbox || elm instanceof ScheduleOutbox);\n\t}\n\n\t/**\n\t * finds all calendars in this calendar home\n\t *\n\t * @returns {Promise<Calendar[]>}\n\t */\n\tasync findAllCalendars() {\n\t\treturn super.findAllByFilter((elm) => elm instanceof Calendar);\n\t}\n\n\t/**\n\t * finds all subscriptions in this calendar home\n\t *\n\t * @returns {Promise<Subscription[]>}\n\t */\n\tasync findAllSubscriptions() {\n\t\treturn super.findAllByFilter((elm) => elm instanceof Subscription);\n\t}\n\n\t/**\n\t * finds all schedule inboxes in this calendar home\n\t *\n\t * @returns {Promise<ScheduleInbox[]>}\n\t */\n\tasync findAllScheduleInboxes() {\n\t\treturn super.findAllByFilter((elm) => elm instanceof ScheduleInbox);\n\t}\n\n\t/**\n\t * finds all schedule outboxes in this calendar home\n\t *\n\t * @returns {Promise<ScheduleOutbox[]>}\n\t */\n\tasync findAllScheduleOutboxes() {\n\t\treturn super.findAllByFilter((elm) => elm instanceof ScheduleOutbox);\n\t}\n\n    /**\n     * creates a new calendar collection\n\t *\n     * @param {String} displayname\n     * @param {String} color\n     * @returns {Promise<Calendar>}\n     */\n    async createCalendarCollection(displayname, color) {\n        debug('creating a calendar collection');\n\n        const props = [{\n            name: [NS.DAV, 'resourcetype'],\n            children: [{\n                name: [NS.DAV, 'collection']\n            }, {\n                name: [NS.IETF_CALDAV, 'calendar']\n            }]\n        }, {\n            name: [NS.DAV, 'displayname'],\n            value: displayname\n        }, {\n            name: [NS.APPLE, 'calendar-color'],\n            value: color\n        }, {\n            name: [NS.OWNCLOUD, 'calendar-enabled'],\n            value: '1'\n        }];\n\n        const name = super._getAvailableNameFromToken(displayname);\n        return super.createCollection(name, props);\n    }\n\n    /**\n\t * creates a new subscription\n\t *\n     * @param {String} displayname\n     * @param {String} color\n     * @param {String} source\n     * @returns {Promise<Subscription>}\n     */\n    async createSubscribedCollection(displayname, color, source) {\n        debug('creating a subscribed collection');\n\n        const props = [{\n            name: [NS.DAV, 'resourcetype'],\n            children: [{\n                name: [NS.DAV, 'collection']\n            }, {\n                name: [NS.CALENDARSERVER, 'subscribed']\n            }]\n        }, {\n            name: [NS.DAV, 'displayname'],\n            value: displayname\n        }, {\n            name: [NS.APPLE, 'calendar-color'],\n            value: color\n        }, {\n            name: [NS.OWNCLOUD, 'calendar-enabled'],\n            value: '1'\n        }, {\n            name: [NS.CALENDARSERVER, 'source'],\n            children: [{\n                name: [NS.DAV, 'href'],\n                value: source\n            }]\n        }];\n\n        const name = super._getAvailableNameFromToken(displayname);\n        return super.createCollection(name, props);\n    }\n\n    /**\n     * Search all calendars the user has access to\n     * This method makes use of Nextcloud's custom\n     * calendar Search API\n     *\n     * Documentation about that API can be found at: ...\n     *\n     * @returns {Promise<VObject[]>}\n     */\n    async search() {\n        // TODO - implement me\n    }\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport * as NS from \"../utility/namespaceUtility.js\";\n\n/**\n *\n * This parser is capable of parsing:\n * - {urn:ietf:params:xml:ns:carddav}addressbook-description\n * - {urn:ietf:params:xml:ns:carddav}supported-address-data\n * - {urn:ietf:params:xml:ns:carddav}max-resource-size\n * - {http://calendarserver.org/ns/}getctag\n * - {http://owncloud.org/ns}enabled\n * - {http://owncloud.org/ns}read-only\n *\n * @param {Object} props\n * @return {Object}\n */\nexport default function addressBookParser(props) {\n\tconst parsed = {};\n\n\tObject.entries(props).forEach(([key, value]) => {\n\t\tswitch (key) {\n\t\t\tcase '{urn:ietf:params:xml:ns:carddav}addressbook-description':\n\t\t\tcase '{http://calendarserver.org/ns/}getctag':\n\t\t\t\tparsed[key] = text(value);\n\t\t\t\tbreak;\n\t\t\tcase '{urn:ietf:params:xml:ns:carddav}max-resource-size':\n\t\t\t\tparsed[key] = int(value);\n\t\t\t\tbreak;\n\n\t\t\tcase '{http://owncloud.org/ns}enabled':\n\t\t\tcase '{http://owncloud.org/ns}read-only':\n\t\t\t\tparsed[key] = bool(value);\n\t\t\t\tbreak;\n\n\t\t\tcase '{urn:ietf:params:xml:ns:carddav}supported-address-data':\n\t\t\t\tparsed[key] = supportedAddressData(value);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\treturn parsed;\n}\n\n/**\n *\n * @param value\n * @returns {*}\n */\nfunction text(value) {\n\treturn value;\n}\n\n/**\n *\n * @param value\n * @returns {boolean}\n */\nfunction bool(value) {\n\treturn value === '1'\n}\n\n/**\n *\n * @param value\n * @returns {number}\n */\nfunction int(value) {\n\treturn parseInt(value, 10);\n}\n\n/**\n *\n * @param value\n * @returns {*}\n */\nfunction supportedAddressData(value) {\n\tif (!Array.isArray(value)) {\n\t\treturn;\n\t}\n\n\treturn value.map((v) => {\n\t\treturn {\n\t\t\t'content-type': v.getAttribute('content-type'),\n\t\t\t'version': v.getAttribute('version')\n\t\t};\n\t});\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport * as NS from \"../utility/namespaceUtility.js\";\n\n/**\n *\n * This function is capable of creating the propset xml structure for:\n * - {urn:ietf:params:xml:ns:carddav}addressbook-description\n * - {http://owncloud.org/ns}enabled\n *\n * @param {Object} props\n * @return {Object}\n */\nexport default function addressBookPropSet(props) {\n\tconst xmlified = [];\n\n\tObject.entries(props).forEach(([key, value]) => {\n\t\tswitch (key) {\n\t\t\tcase '{urn:ietf:params:xml:ns:carddav}addressbook-description':\n\t\t\t\txmlified.push({\n\t\t\t\t\tname: [NS.IETF_CARDDAV, 'addressbook-description'],\n\t\t\t\t\tvalue: value\n\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase '{http://owncloud.org/ns}enabled':\n\t\t\t\txmlified.push({\n\t\t\t\t\tname: [NS.OWNCLOUD, 'enabled'],\n\t\t\t\t\tvalue: value ? '1' : '0'\n\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\treturn xmlified;\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport {DavObject} from \"./davObject.js\";\nimport * as NS from \"../utility/namespaceUtility.js\";\n\n/**\n * @class\n */\nexport class VCard extends DavObject {\n\n\t/**\n\t * Creates a VCard that is supposed to store address-data\n\t * as specified in RFC 6350.\n\t *\n\t * https://tools.ietf.org/html/rfc6350\n\t *\n\t * @inheritDoc\n\t */\n\tconstructor(...args) {\n\t\tsuper(...args);\n\n\t\tsuper._exposeProperty('data', NS.IETF_CARDDAV, 'address-data', true);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic getPropFindList() {\n\t\treturn super.getPropFindList().concat([\n\t\t\t[NS.IETF_CARDDAV, 'address-data'],\n\t\t]);\n\t}\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport {davCollectionShareable} from \"./davCollectionShareable.js\";\nimport {DavCollection} from \"./davCollection.js\";\nimport * as NS from \"../utility/namespaceUtility.js\";\nimport * as StringUtility from '../utility/stringUtility.js'\nimport * as XMLUtility from \"../utility/xmlUtility.js\";\nimport addressBookParser from \"../parser/addressbookParser.js\";\nimport addressBookPropSet from \"../propset/addressBookPropSet.js\";\nimport {VCard} from \"./vcard.js\";\n\nimport {debugFactory} from \"../debug.js\";\nconst debug = debugFactory('AddressBook');\n\n/**\n * This class represents an address book collection as specified in\n * https://tools.ietf.org/html/rfc6352#section-5.2\n *\n * On top of all the properties provided by davCollectionShareable and DavCollection,\n * It allows you access to the following list of properties:\n * - description\n * - enabled\n * - readOnly\n *\n * The first two allowing read-write access\n *\n * @augments DavCollection\n */\nexport class AddressBook extends davCollectionShareable(DavCollection) {\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor(...args) {\n\t\tsuper(...args);\n\n\t\tsuper._registerObjectFactory('text/vcard', VCard);\n\t\tsuper._registerPropFindParser(addressBookParser);\n\t\tsuper._registerPropSetFactory(addressBookPropSet);\n\n\t\tsuper._exposeProperty('description', NS.IETF_CARDDAV, 'addressbook-description', true);\n\t\tsuper._exposeProperty('enabled', NS.OWNCLOUD, 'enabled', true);\n\t\tsuper._exposeProperty('readOnly', NS.OWNCLOUD, 'read-only');\n\t}\n\n\t/**\n\t * finds all VCards in this address book\n\t *\n\t * @returns {Promise<VCard[]>}\n\t */\n\tfindAllVCards() {\n\t\treturn super.findAllByFilter((elm) => elm instanceof VCard);\n\t}\n\n\t/**\n\t * finds all contacts in an address-book, but with filtered data.\n\t *\n\t * Example use:\n\t * findAllAndFilterBySimpleProperties(['EMAIL', 'UID', 'CATEGORIES', 'FN', 'TEL', 'NICKNAME', 'N'])\n\t *\n\t * @param {String[]} props\n\t * @returns {Promise<VCard[]>}\n\t */\n\tasync findAllAndFilterBySimpleProperties(props) {\n\t\tconst children = [];\n\t\tprops.forEach((prop) => {\n\t\t\tchildren.push({\n\t\t\t\tname: [NS.IETF_CARDDAV, 'prop'],\n\t\t\t\tattributes: [['name', prop]]\n\t\t\t});\n\t\t});\n\n\t\treturn this.addressbookQuery(null, [{\n\t\t\tname: [NS.DAV, 'getetag']\n\t\t}, {\n\t\t\tname: [NS.DAV, 'getcontenttype']\n\t\t}, {\n\t\t\tname: [NS.DAV, 'resourcetype']\n\t\t}, {\n\t\t\tname: [NS.IETF_CARDDAV, 'address-data'],\n\t\t\tchildren: children\n\t\t}]);\n\t}\n\n\t/**\n\t * creates a new VCard object in this address book\n\t *\n\t * @param {String} data\n\t * @returns {Promise<VCard>}\n\t */\n\tasync createVCard(data) {\n\t\tdebug('creating VCard object');\n\n\t\tconst name = StringUtility.uid('', 'vcf');\n\t\tconst headers = {\n\t\t\t'Content-Type': 'text/vcard; charset=utf-8'\n\t\t};\n\n\t\treturn super.createObject(name, headers, data);\n\t}\n\n\t/**\n\t * sends an addressbook query as defined in\n\t * https://tools.ietf.org/html/rfc6352#section-8.6\n\t *\n\t * @param {Object[]} filter\n\t * @param {Object[]} prop\n\t * @param {Number} limit\n\t * @returns {Promise<VCard[]>}\n\t */\n\tasync addressbookQuery(filter, prop=null, limit=null) {\n\t\tdebug('sending an addressbook-query request');\n\n\t\tconst [skeleton, ] = XMLUtility.getRootSkeleton(\n\t\t\t[NS.IETF_CARDDAV, 'addressbook-query']\n\t\t);\n\n\t\tif (!prop) {\n\t\t\tskeleton.children.push({\n\t\t\t\tname: [NS.DAV, 'prop'],\n\t\t\t\tchildren: super._propFindList,\n\t\t\t});\n\t\t} else {\n\t\t\tskeleton.children.push({\n\t\t\t\tname: [NS.DAV, 'prop'],\n\t\t\t\tchildren: prop\n\t\t\t});\n\t\t}\n\n\t\t// According to the spec, every address-book query needs a filter,\n\t\t// but Nextcloud just returns all elements without a filter.\n\t\tif (filter) {\n\t\t\tskeleton.children.push(filter);\n\t\t}\n\n\t\tif (limit) {\n\t\t\tskeleton.children.push({\n\t\t\t\tname: [NS.IETF_CARDDAV, 'limit'],\n\t\t\t\tchildren: [{\n\t\t\t\t\tname: [NS.IETF_CARDDAV, 'nresults'],\n\t\t\t\t\tvalue: limit\n\t\t\t\t}]\n\t\t\t})\n\t\t}\n\n\t\tconst headers = {\n\t\t\t'Depth': '1'\n\t\t};\n\t\tconst body = XMLUtility.serialize(skeleton);\n\t\tconst response = await this._request.report(this.url, headers, body);\n\t\treturn super._handleMultiStatusResponse(response, AddressBook._isRetrievalPartial(prop));\n\t}\n\n\t/**\n\t * sends an addressbook multiget query as defined in\n\t * https://tools.ietf.org/html/rfc6352#section-8.7\n\t *\n\t * @param {String[]} hrefs\n\t * @param {Object[]} prop\n\t * @returns {Promise<VCard[]>}\n\t */\n\tasync addressbookMultiget(hrefs=[], prop) {\n\t\tdebug('sending an addressbook-multiget request');\n\n\t\tif (hrefs.length === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst [skeleton, ] = XMLUtility.getRootSkeleton(\n\t\t\t[NS.IETF_CARDDAV, 'addressbook-multiget'],\n\t\t);\n\n\t\tif (!prop) {\n\t\t\tskeleton.children.push({\n\t\t\t\tname: [NS.DAV, 'prop'],\n\t\t\t\tchildren: super._propFindList,\n\t\t\t});\n\t\t} else {\n\t\t\tskeleton.children.push({\n\t\t\t\tname: [NS.DAV, 'prop'],\n\t\t\t\tchildren: prop\n\t\t\t})\n\t\t}\n\n\t\threfs.forEach((href) => {\n\t\t\tskeleton.children.push({\n\t\t\t\tname: [NS.DAV, 'href'],\n\t\t\t\tvalue: href\n\t\t\t});\n\t\t});\n\n\t\tconst headers = {\n\t\t\t'Depth': '1'\n\t\t};\n\t\tconst body = XMLUtility.serialize(skeleton);\n\t\tconst response = await this._request.report(this.url, headers, body);\n\t\treturn super._handleMultiStatusResponse(response, AddressBook._isRetrievalPartial(prop));\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic getPropFindList() {\n\t\treturn super.getPropFindList().concat([\n\t\t\t[NS.IETF_CARDDAV, 'addressbook-description'],\n\t\t\t[NS.IETF_CARDDAV, 'supported-address-data'],\n\t\t\t[NS.IETF_CARDDAV, 'max-resource-size'],\n\t\t\t[NS.CALENDARSERVER, 'getctag'],\n\t\t\t[NS.OWNCLOUD, 'enabled'],\n\t\t\t[NS.OWNCLOUD, 'read-only']\n\t\t]);\n\t}\n\n\t/**\n\t * checks if the prop part of a report requested partial data\n\t *\n\t * @param {Object[]} prop\n\t * @returns {boolean}\n\t * @private\n\t */\n\tstatic _isRetrievalPartial(prop) {\n\t\tif (!prop) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst addressBookDataProperty = prop.find((p) => {\n\t\t\treturn p.name[0] === NS.IETF_CARDDAV && p.name[1] === 'address-data';\n\t\t});\n\n\t\tif (!addressBookDataProperty) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!addressBookDataProperty.children;\n\t}\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {DavCollection} from \"./davCollection.js\";\nimport * as NS from \"../utility/namespaceUtility.js\";\nimport {AddressBook} from \"./addressBook.js\";\n\nimport {debugFactory} from \"../debug.js\";\nconst debug = debugFactory('AddressBookHome');\n\n/**\n * This class represents an address book home as specified in\n * https://tools.ietf.org/html/rfc6352#section-7.1.1\n *\n * As of this versions' release, the Nextcloud server will always\n * return only one address book home. Despite that, RFC6352 allows\n * a server to return multiple address book homes though.\n */\nexport class AddressBookHome extends DavCollection {\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor(...args) {\n\t\tsuper(...args);\n\n        super._registerCollectionFactory('{' + NS.IETF_CARDDAV + '}addressbook', AddressBook);\n    }\n\n\t/**\n\t * finds all address books in this address book home\n\t *\n\t * @returns {Promise<AddressBook[]>}\n\t */\n\tasync findAllAddressBooks() {\n\t\treturn super.findAllByFilter((elm) => elm instanceof AddressBook);\n\t}\n\n    /**\n     * creates a new address book collection\n\t *\n     * @param {String} displayname\n     * @returns {Promise<AddressBook>}\n     */\n    async createAddressBookCollection(displayname) {\n        debug('creating an addressbook collection');\n\n        const props = [{\n            name: [NS.DAV, 'resourcetype'],\n            children: [{\n                name: [NS.DAV, 'collection']\n            }, {\n                name: [NS.IETF_CARDDAV, 'addressbook']\n            }]\n        }, {\n            name: [NS.DAV, 'displayname'],\n            value: displayname\n        }];\n\n        const name = super._getAvailableNameFromToken(displayname);\n        return super.createCollection(name, props);\n    }\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport Request from \"./request.js\";\nimport * as NS from \"./utility/namespaceUtility.js\";\nimport {CalendarHome} from \"./models/calendarHome.js\";\nimport {AddressBookHome} from \"./models/addressBookHome.js\";\n\nimport {debugFactory} from \"./debug.js\";\nconst debug = debugFactory('index.js');\n\nexport {debugFactory as debug, NS as namespaces};\n\n/**\n *\n */\nexport default class DavClient {\n\n\t/**\n\t * @param {Object} options\n\t * @param {Function} xhrProvider\n\t * @param {Object} factories\n\t */\n\tconstructor(options, xhrProvider = null, factories = {}) {\n\t\tObject.assign(this, {\n\t\t\trootUrl: null,\n\t\t}, options);\n\n\t\tObject.assign(this, {\n\t\t\tadvertisedFeatures: [],\n\t\t\tprincipalUrl: null,\n\t\t\tprincipalCollections: [],\n\t\t\tcalendarHomes: [],\n\t\t\taddressBookHomes: [],\n\t\t});\n\n\t\tthis._request = new Request(this.rootUrl, xhrProvider);\n\t}\n\n\t/**\n\t * initializes the DAVClient\n\t * @param {Object} options\n\t * @returns {Promise<DavClient>}\n\t */\n\tasync connect(options={enableCalDAV: false, enableCardDAV: false}) {\n\t\t// TODO - check if already connected and don't connect again\n\n\t\t// we don't support rfc 6764 for now - Pull-requests welcome :)\n\t\tif (!this.rootUrl) {\n\t\t\tthrow new Error('No rootUrl configured');\n\t\t}\n\n\t\tawait this._discoverPrincipalUri();\n\t\tdebug(`PrincipalURL: ${this.principalUrl}`);\n\n\t\tif (options.enableCalDAV) {\n\t\t\tdebug(`loading calendar-homes`);\n\t\t\tawait this._discoverCalendarHomes();\n\t\t}\n\t\tif (options.enableCardDAV) {\n\t\t\tdebug(`loading addressbook-homes`);\n\t\t\tawait this._discoverAddressBookHomes();\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t// /**\n\t//  * @returns {Promise<[any , any , any , any , any , any , any , any , any , any]>}\n\t//  */\n\t// async sync() {\n\t//     const promises = [];\n\t//\n\t//     // Ideally we would also check for new calendar-homes and\n\t//     // new addressbook-homes as well, but then Nextcloud will\n\t//     // ever only send provide one each, so we omit this step\n\t//     // to cut down network traffic\n\t//\n\t//     this.calendarHomes.forEach((calendarHome) => {\n\t//         promises.push(calendarHome.sync());\n\t//     });\n\t//     this.addressbookHomes.forEach((addressbookHome) => {\n\t//         promises.push(addressbookHome.sync());\n\t//     });\n\t//\n\t//     return Promise.all(promises);\n\t// }\n\n\t/**\n\t *\n\t * @returns {Promise<void>}\n\t */\n\tasync principalPropertySearch() {\n\t\t// TODO - implement me\n\t}\n\n\t/**\n\t * discovers the accounts principal uri solely based on rootURL\n\t * @returns {Promise<void>}\n\t * @private\n\t */\n\tasync _discoverPrincipalUri() {\n\t\tconst props = await this._request.propFind(this.rootUrl, [\n\t\t\t[NS.DAV, 'current-user-principal'],\n\t\t], 0);\n\n\t\tthis.principalUrl = this._request.pathname(props[\"{DAV:}current-user-principal\"][0].textContent);\n\t}\n\n\t/**\n\t * discovers all calendar-homes in this account, all principal collections\n\t * and advertised features\n\t *\n\t * a user will most commonly only have one calendar-home,\n\t * the CalDAV standard allows multiple calendar-homes though\n\t *\n\t * @returns {Promise<void>}\n\t * @private\n\t */\n\tasync _discoverCalendarHomes() {\n\t\tconst props = await this._request.propFind(this.principalUrl, [\n\t\t\t[NS.IETF_CALDAV, 'calendar-home-set'],\n\t\t\t[NS.DAV, 'principal-collection-set'],\n\t\t\t[NS.IETF_CALDAV, 'calendar-user-address-set'],\n\t\t\t[NS.IETF_CALDAV, 'schedule-inbox-URL'],\n\t\t\t[NS.IETF_CALDAV, 'schedule-outbox-URL'],\n\t\t\t[NS.DAV, 'displayname'],\n\t\t\t[NS.DAV, 'principal-URL'],\n\t\t\t[NS.DAV, 'supported-report-set']\n\t\t], 0);\n\n\t\t// TODO - store advertised features\n\n\t\tconst calendarHomes = props[`{${NS.IETF_CALDAV}}calendar-home-set`];\n\t\tthis.calendarHomes = calendarHomes.map((calendarHome) => {\n\t\t\tconst url = this._request.pathname(calendarHome.textContent);\n\t\t\treturn new CalendarHome(this, this._request, url, props);\n\t\t});\n\t\tthis._extractPrincipalCollectionSets(props);\n\t}\n\n\t/**\n\t * discovers all address-book-homes in this account, all principal collections\n\t * and advertised features\n\t *\n\t * a user will most commonly only have one address-book-home,\n\t * the CardDAV standard allows multiple address-book-homes though\n\t *\n\t * @returns {Promise<void>}\n\t * @private\n\t */\n\tasync _discoverAddressBookHomes() {\n\t\tconst props = await this._request.propFind(this.principalUrl, [\n\t\t\t[NS.IETF_CARDDAV, 'addressbook-home-set'],\n\t\t\t[NS.DAV, 'principal-collection-set'],\n\t\t], 0);\n\n\t\t// TODO - store advertised features\n\n\t\tconst addressBookHomes = props[`{${NS.IETF_CARDDAV}}addressbook-home-set`];\n\t\tthis.addressBookHomes = addressBookHomes.map((addressbookHome) => {\n\t\t\tconst url = this._request.pathname(addressbookHome.textContent);\n\t\t\treturn new AddressBookHome(this, this._request, url, props);\n\t\t});\n\t\tthis._extractPrincipalCollectionSets(props);\n\t}\n\n\t/**\n\t * extracts principalCollection Information from an existing props object\n\t * returned from the server\n\t *\n\t * @param {Object} props\n\t * @returns void\n\t * @private\n\t */\n\t_extractPrincipalCollectionSets(props) {\n\t\tconst principalCollectionSets = props[`{${NS.DAV}}principal-collection-set`];\n\t\tthis.principalCollections = principalCollectionSets.map((principalCollection) => {\n\t\t\treturn this._request.pathname(principalCollection.textContent);\n\t\t});\n\t}\n}\n\n"],"sourceRoot":""}