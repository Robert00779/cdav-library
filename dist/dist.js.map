{"version":3,"sources":["webpack://cdav/webpack/bootstrap","webpack://cdav/./node_modules/normalize-url/index.js","webpack://cdav/./src/debug.js","webpack://cdav/./src/request.js","webpack://cdav/./src/utility/namespaceUtility.js","webpack://cdav/./src/utility/stringUtility.js","webpack://cdav/./src/utility/xmlUtility.js","webpack://cdav/./src/models/davEventListener.js","webpack://cdav/./src/parser/davCollectionParser.js","webpack://cdav/./src/propset/davCollectionPropSet.js","webpack://cdav/./src/models/davCollection.js","webpack://cdav/./src/models/davCollectionPublishable.js","webpack://cdav/./src/models/davCollectionShareable.js","webpack://cdav/./src/parser/calendarParser.js","webpack://cdav/./src/models/davObject.js","webpack://cdav/./src/models/vobject.js","webpack://cdav/./src/propset/calendarPropSet.js","webpack://cdav/./src/models/calendar.js","webpack://cdav/./src/models/subscription.js","webpack://cdav/./src/models/scheduleInbox.js","webpack://cdav/./src/models/scheduleOutbox.js","webpack://cdav/./src/models/calendarHome.js","webpack://cdav/./src/parser/addressbookParser.js","webpack://cdav/./src/propset/addressBookPropSet.js","webpack://cdav/./src/models/addressbook.js","webpack://cdav/./src/models/addressbookHome.js","webpack://cdav/./src/index.js","webpack://cdav/./node_modules/querystring-es3/encode.js","webpack://cdav/./node_modules/querystring-es3/decode.js","webpack://cdav/./node_modules/querystring-es3/index.js","webpack://cdav/./node_modules/url/util.js","webpack://cdav/(webpack)/buildin/global.js","webpack://cdav/(webpack)/buildin/module.js","webpack://cdav/./node_modules/punycode/punycode.js","webpack://cdav/./node_modules/url/url.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","URLParser","URL","testParameter","filters","some","filter","RegExp","test","urlString","opts","assign","normalizeProtocol","normalizeHttps","normalizeHttp","stripFragment","stripWWW","removeQueryParameters","removeTrailingSlash","removeDirectoryIndex","sortQueryParameters","hasRelativeProtocol","trim","startsWith","replace","urlObj","Error","protocol","hash","pathname","_","p1","decodeURI","Array","isArray","length","pathComponents","split","slice","join","hostname","searchParams","keys","delete","sort","toString","debugFactory","context","args","enabled","console","log","request_Request","[object Object]","baseUrl","xhrProvider","this","_davClient","dav","Client","method","url","headers","body","absoluteUrl","request","properties","depth","props","map","propFind","then","res","wasRequestSuccessful","status","reducePropStats","filter200Responses","propStat","groupedPropStats","responses","grouped","forEach","response","href","groupMultistatusByPath","entries","url1","url2","normalize_url_default","substr","slashPos","lastIndexOf","parseInt","getStatusCodeFromString","propStats","propObjects","push","apply","DAV","IETF_CALDAV","IETF_CARDDAV","OWNCLOUD","NEXTCLOUD","APPLE","CALENDARSERVER","NS_MAP","DAV:","urn:ietf:params:xml:ns:caldav","urn:ietf:params:xml:ns:carddav","http://owncloud.org/ns","http://nextcloud.com/ns","http://apple.com/ns/ical/","http://calendarserver.org/ns/","uid","prefix","suffix","Math","random","toUpperCase","serializer","XMLSerializer","serialize","json","root","document","implementation","createDocument","xmlify","xmlDoc","parent","element","createElementNS","attributes","a","setAttribute","setAttributeNS","textContent","children","child","appendChild","serializeToString","DAVEventListener","_eventListeners","type","listener","options","index","findIndex","sListener","sOptions","splice","event","once","removeEventListener","davCollectionParser","parsed","mapper","{DAV:}acl","simple","prop","principal","privileges","childNodes","namespaceURI","localName","privilegeNode","concat","{DAV:}displayname","simpleText","{DAV:}owner","{DAV:}resourcetype","{DAV:}sync-token","davCollectionPropSet","davCollection_debug","davCollection_DavCollection","super","_parent","_request","_url","_rawProps","_props","_propFindList","_collectionFactoryMapper","_objectFactoryMapper","_propSetFactory","_isDirty","_updatedProperties","_children","_registerPropFindParser","_registerPropSetFactory","_exposeProperty","allProps","all","path","contentType","collectionType","find","e","getNodesClarkeName","getCollectionType","uri","skeleton","dPropChildren","arguments","childrenWrapper","argument","level","getRootSkeleton","data","mkCol","undefined","put","identifier","factory","getPropFindList","parser","xmlNamespace","xmlName","mutable","set","val","token","takenKeys","start","isAvailable","toLowerCase","indexOf","positionLastDash","firstPart","lastPart","match","node","davCollectionShareable","Base","calendarParser","calendarParser_mapper","{http://apple.com/ns/ical/}calendar-order","simpleInt","{http://apple.com/ns/ical/}calendar-color","{http://calendarserver.org/ns/}getctag","calendarParser_simpleText","{http://calendarserver.org/ns/}source","{urn:ietf:params:xml:ns:caldav}calendar-description","{urn:ietf:params:xml:ns:caldav}calendar-timezone","{urn:ietf:params:xml:ns:caldav}supported-calendar-component-set","simpleComponents","vevent","vjournal","vtodo","component","getNamedItem","{urn:ietf:params:xml:ns:caldav}supported-calendar-data","{urn:ietf:params:xml:ns:caldav}max-resource-size","{urn:ietf:params:xml:ns:caldav}min-date-time","{urn:ietf:params:xml:ns:caldav}max-date-time","{urn:ietf:params:xml:ns:caldav}max-instances","{urn:ietf:params:xml:ns:caldav}max-attendees-per-instance","{urn:ietf:params:xml:ns:caldav}supported-collation-set","{http://owncloud.org/ns}calendar-enabled","{http://nextcloud.com/ns}owner-displayname","davObject_DavObject","isFiltered","_isFiltered","collection","If-Match","etag","vobject_VObject","calendarPropSet","calendar_Calendar","davCollectionPublishable","_registerObjectFactory","uris","from","to","createObject","Content-Type","subscription_Subscription","scheduleInbox_ScheduleInbox","scheduleOutbox_ScheduleOutbox","calendarHome_debug","calendarHome_CalendarHome","_registerCollectionFactory","displayname","color","_getAvailableNameFromToken","createCollection","source","addressBookParser","addressBookPropSet","addressbook_debug","addressbook_AddressBook","addressbookHome_debug","addressbookHome_AddressBookHome","__webpack_exports__","namespaceUtility_namespaceObject","src_debug","src_DavClient","factories","rootUrl","advertisedFeatures","principalUrl","calendarHomes","addressbookHomes","debug","enableCalDAV","enableCardDAV","async","account","calendarHome","calendarHomeUrls","addressbookHome","addressbookHomeUrls","CalDAVClient","connect","CardDAVClient","stringifyPrimitive","v","isFinite","obj","sep","eq","objectKeys","k","ks","encodeURIComponent","xs","f","qs","regexp","maxKeys","len","kstr","vstr","x","idx","decodeURIComponent","decode","parse","encode","stringify","isString","arg","isObject","isNull","isNullOrUndefined","g","Function","eval","window","webpackPolyfill","deprecate","paths","__WEBPACK_AMD_DEFINE_RESULT__","nodeType","freeGlobal","global","self","punycode","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","overflow","not-basic","invalid-input","baseMinusTMin","floor","stringFromCharCode","String","fromCharCode","error","RangeError","array","fn","result","mapDomain","string","parts","ucs2decode","extra","output","counter","charCodeAt","ucs2encode","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","input","out","basic","j","oldi","w","baseMinusT","inputLength","bias","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","version","ucs2","toASCII","toUnicode","util","Url","slashes","auth","host","port","search","query","urlParse","resolve","relative","resolveObject","format","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","javascript:","hostlessProtocol","slashedProtocol","http","https","ftp","gopher","file","http:","https:","ftp:","gopher:","file:","querystring","parseQueryString","slashesDenoteHost","u","TypeError","queryIndex","splitter","uSplit","rest","simplePath","exec","proto","lowerProto","atSign","hostEnd","hec","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","unshift","h","ae","esc","escape","qm","charAt","rel","tkeys","tk","tkey","rkeys","rk","rkey","relPath","shift","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","pop","authInHost","last","hasTrailingSlash","up","isAbsolute"],"mappings":"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","file":"dist.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","'use strict';\n// TODO: Use the `URL` global when targeting Node.js 10\nconst URLParser = typeof URL === 'undefined' ? require('url').URL : URL;\n\nfunction testParameter(name, filters) {\n\treturn filters.some(filter => filter instanceof RegExp ? filter.test(name) : filter === name);\n}\n\nmodule.exports = (urlString, opts) => {\n\topts = Object.assign({\n\t\tnormalizeProtocol: true,\n\t\tnormalizeHttps: false,\n\t\tnormalizeHttp: false,\n\t\tstripFragment: true,\n\t\tstripWWW: true,\n\t\tremoveQueryParameters: [/^utm_\\w+/i],\n\t\tremoveTrailingSlash: true,\n\t\tremoveDirectoryIndex: false,\n\t\tsortQueryParameters: true\n\t}, opts);\n\n\turlString = urlString.trim();\n\n\tconst hasRelativeProtocol = urlString.startsWith('//');\n\tconst isRelativeUrl = !hasRelativeProtocol && /^\\.*\\//.test(urlString);\n\n\t// Prepend protocol\n\tif (!isRelativeUrl) {\n\t\turlString = urlString.replace(/^(?!(?:\\w+:)?\\/\\/)|^\\/\\//, 'http://');\n\t}\n\n\tconst urlObj = new URLParser(urlString);\n\n\tif (opts.normalizeHttps && opts.normalizeHttp) {\n\t\tthrow new Error('The `normalizeHttp` and `normalizeHttps` options cannot be used together');\n\t}\n\n\tif (opts.normalizeHttp && urlObj.protocol === 'http:') {\n\t\turlObj.protocol = 'https:';\n\t}\n\n\tif (opts.normalizeHttps && urlObj.protocol === 'https:') {\n\t\turlObj.protocol = 'http:';\n\t}\n\n\t// Remove fragment\n\tif (opts.stripFragment) {\n\t\turlObj.hash = '';\n\t}\n\n\t// Remove duplicate slashes if not preceded by a protocol\n\tif (urlObj.pathname) {\n\t\t// TODO: Use the following instead when targeting Node.js 10\n\t\t// `urlObj.pathname = urlObj.pathname.replace(/(?<!https?:)\\/{2,}/g, '/');`\n\t\turlObj.pathname = urlObj.pathname.replace(/((?![https?:]).)\\/{2,}/g, (_, p1) => {\n\t\t\tif (/^(?!\\/)/g.test(p1)) {\n\t\t\t\treturn `${p1}/`;\n\t\t\t}\n\t\t\treturn '/';\n\t\t});\n\t}\n\n\t// Decode URI octets\n\tif (urlObj.pathname) {\n\t\turlObj.pathname = decodeURI(urlObj.pathname);\n\t}\n\n\t// Remove directory index\n\tif (opts.removeDirectoryIndex === true) {\n\t\topts.removeDirectoryIndex = [/^index\\.[a-z]+$/];\n\t}\n\n\tif (Array.isArray(opts.removeDirectoryIndex) && opts.removeDirectoryIndex.length > 0) {\n\t\tlet pathComponents = urlObj.pathname.split('/');\n\t\tconst lastComponent = pathComponents[pathComponents.length - 1];\n\n\t\tif (testParameter(lastComponent, opts.removeDirectoryIndex)) {\n\t\t\tpathComponents = pathComponents.slice(0, pathComponents.length - 1);\n\t\t\turlObj.pathname = pathComponents.slice(1).join('/') + '/';\n\t\t}\n\t}\n\n\tif (urlObj.hostname) {\n\t\t// Remove trailing dot\n\t\turlObj.hostname = urlObj.hostname.replace(/\\.$/, '');\n\n\t\t// Remove `www.`\n\t\tif (opts.stripWWW) {\n\t\t\turlObj.hostname = urlObj.hostname.replace(/^www\\./, '');\n\t\t}\n\t}\n\n\t// Remove query unwanted parameters\n\tif (Array.isArray(opts.removeQueryParameters)) {\n\t\tfor (const key of [...urlObj.searchParams.keys()]) {\n\t\t\tif (testParameter(key, opts.removeQueryParameters)) {\n\t\t\t\turlObj.searchParams.delete(key);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Sort query parameters\n\tif (opts.sortQueryParameters) {\n\t\turlObj.searchParams.sort();\n\t}\n\n\t// Take advantage of many of the Node `url` normalizations\n\turlString = urlObj.toString();\n\n\t// Remove ending `/`\n\tif (opts.removeTrailingSlash || urlObj.pathname === '/') {\n\t\turlString = urlString.replace(/\\/$/, '');\n\t}\n\n\t// Restore relative protocol, if applicable\n\tif (hasRelativeProtocol && !opts.normalizeProtocol) {\n\t\turlString = urlString.replace(/^http:\\/\\//, '//');\n\t}\n\n\treturn urlString;\n};\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n/**\n * creates a debug function bound to a context\n * @param {String} context\n * @returns {Function}\n */\nexport function debugFactory(context) {\n\treturn (...args) => {\n\t\tif (debugFactory.enabled) {\n\t\t\tconsole.log(context, args);\n\t\t}\n\t}\n}\n\ndebugFactory.enabled = false;\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport normalizeUrl from 'normalize-url';\n\nimport {debugFactory} from \"./debug\";\nconst debug = debugFactory('request.js');\n\n/**\n * wrapper class for davclient.js with url helper methods\n */\nexport default class Request {\n\n\t/**\n\t * @param {String} baseUrl\n\t * @param {Function} xhrProvider\n\t */\n\tconstructor(baseUrl, xhrProvider=null) {\n\t\tthis.baseUrl = baseUrl;\n\t\tthis._davClient = new dav.Client({baseUrl});\n\t\tthis._davClient.xhrProvider = xhrProvider || this._davClient.xhrProvider;\n\t}\n\n\t/**\n\t *\n\t * @param {string} method - HTTP Method name\n\t * @param {string} url - URL to do the request on\n\t * @param {object} headers - additional HTTP headers to send\n\t * @param {string} body\n\t * @returns {Promise<*>}\n\t */\n\tasync basic(method, url, headers, body) {\n\t\turl = this.absoluteUrl(url);\n\t\treturn this._davClient.request(method, url, headers, body);\n\t}\n\n\t/**\n\t * @param {string} url - URL to do the GET request on\n\t * @param {object} headers - additional HTTP headers to send\n\t * @returns {Promise<*>}\n\t */\n\tasync get(url, headers) {\n\t\turl = this.absoluteUrl(url);\n\t\treturn this._davClient.request('GET', url, headers);\n\t}\n\n\t/**\n\t * @param {string} url - URL to do the PATCH request on\n\t * @param {object} headers - additional HTTP headers to send\n\t * @param {string} body\n\t * @returns {Promise<*>}\n\t */\n\tasync patch(url, headers, body) {\n\t\turl = this.absoluteUrl(url);\n\t\treturn this._davClient.request('PATCH', url, headers, body);\n\t}\n\n\t/**\n\t * @param {string} url - URL to do the POST request on\n\t * @param {object} headers - additional HTTP headers to send\n\t * @param {string} body\n\t * @returns {Promise<*>}\n\t */\n\tasync post(url, headers, body) {\n\t\turl = this.absoluteUrl(url);\n\t\treturn this._davClient.request('POST', url, headers, body);\n\t}\n\n\t/**\n\t * @param {string} url - URL to do the PUT request on\n\t * @param {object} headers - additional HTTP headers to send\n\t * @param {string} body\n\t * @returns {Promise<*>}\n\t */\n\tasync put(url, headers, body) {\n\t\turl = this.absoluteUrl(url);\n\t\treturn this._davClient.request('PUT', url, headers, body);\n\t}\n\n\t/**\n\t * @param {string} url - URL to do the DELETE request on\n\t * @param {object} headers - additional HTTP headers to send\n\t * @returns {Promise<*>}\n\t */\n\tasync delete(url, headers={}) {\n\t\turl = this.absoluteUrl(url);\n\t\treturn this._davClient.request('DELETE', url, headers);\n\t}\n\n\t/**\n\t *\n\t * @returns {Promise<void>}\n\t */\n\tasync copy(url) {\n\t\turl = this.absoluteUrl(url);\n\n\t}\n\n\t/**\n\t *\n\t * @returns {Promise<void>}\n\t */\n\tasync move(url) {\n\t\turl = this.absoluteUrl(url);\n\n\t}\n\n\t/**\n\t * @param {string} url - URL to do the PropFind request on\n\t * @param {array} properties\n\t * @param {int} depth\n\t * @param {object} headers - additional HTTP headers to send\n\t * @returns {Promise<*>}\n\t */\n\tasync propFind(url, properties, depth=0, headers={}) {\n\t\t// convert out own property format to clarke notation\n\t\tconst props = properties.map((p) => `{${p[0]}}${p[1]}`);\n\n\t\turl = this.absoluteUrl(url);\n\t\treturn this._davClient.propFind(url, props, depth, headers).then((res) => {\n\t\t\tif (!wasRequestSuccessful(res.status)) {\n\t\t\t\tthrow new Error('PropFind request was not successful');\n\t\t\t}\n\n\t\t\tif (depth === 0) {\n\t\t\t\treturn reducePropStats(filter200Responses(res.body.propStat));\n\t\t\t} else {\n\t\t\t\tconst groupedPropStats = groupMultistatusByPath(res.body);\n\t\t\t\tObject.entries(groupedPropStats).forEach(([key, value]) => {\n\t\t\t\t\tgroupedPropStats[key] = reducePropStats(filter200Responses(value));\n\t\t\t\t});\n\n\t\t\t\treturn groupedPropStats;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} url - URL to do the PropPatch request on\n\t * @param {object} headers - additional HTTP headers to send\n\t * @param {String} body\n\t * @returns {Promise<*>}\n\t */\n\tasync propPatch(url, headers, body) {\n\t\turl = this.absoluteUrl(url);\n\t\treturn this._davClient.request('PROPPATCH', url, headers, body);\n\t}\n\n\t/**\n\t * @param {string} url - URL to do the MkCol request on\n\t * @param {object} headers - additional HTTP headers to send\n\t * @param {String} body\n\t * @returns {Promise<*>}\n\t */\n\tasync mkCol(url, headers, body) {\n\t\turl = this.absoluteUrl(url);\n\t\treturn this._davClient.request('MKCOL', url, headers, body);\n\t}\n\n\t/**\n\t * @param {string} url - URL to do the REPORT request on\n\t * @param {object} headers - additional HTTP headers to send\n\t * @param {string} body\n\t * @returns {Promise<*>}\n\t */\n\tasync report(url, headers, body) {\n\t\turl = this.absoluteUrl(url);\n\t\treturn this._davClient.request('REPORT', url, headers, body);\n\t}\n\n\t/**\n\t * compares two URLs\n\t * @param {String} url1\n\t * @param {String} url2\n\t * @returns {boolean}\n\t */\n\tcompareURLs(url1, url2) {\n\t\tif (url1 === url2) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// TODO does this cover 'foo/bar/' === 'foo/bar'?\n\n\t\treturn normalizeUrl(url1) === normalizeUrl(url2);\n\t}\n\n\t/**\n\t * returns name of file / folder\n\t * @params {string} url\n\t * @returns {string}\n\t */\n\tfilename(url) {\n\t\tlet pathname = this.pathname(url);\n\t\tif (pathname.substr(-1) === '/') { // TODO - use normalizeUrl instead?\n\t\t\tpathname = pathname.substr(0, pathname.length - 1);\n\t\t}\n\n\t\tconst slashPos = pathname.lastIndexOf('/');\n\t\treturn pathname.substr(slashPos);\n\t}\n\n\t/**\n\t * returns pathname for a URL\n\t * @params {string} url\n\t * @returns {string}\n\t */\n\tpathname(url) {\n\t\tconst urlObject = new URL(url, this.baseUrl);\n\t\treturn urlObject.pathname;\n\t}\n\n\t/**\n\t * @param {string} url\n\t * @returns {string}\n\t */\n\tabsoluteUrl(url) {\n\t\tconst urlObject = new URL(url, this.baseUrl);\n\t\treturn urlObject.href;\n\t}\n}\n\n/**\n *\n * @param responses\n */\nfunction groupMultistatusByPath(responses) {\n\tconst grouped = {};\n\n\tresponses.forEach((response) => {\n\t   grouped[response.href] = response.propStat;\n\t});\n\n\treturn grouped;\n}\n\n/**\n *\n * @param {Array} propStat\n * @return {Array}\n */\nfunction filter200Responses(propStat) {\n\treturn propStat.filter((p) => {\n\t\treturn wasRequestSuccessful(getStatusCodeFromString(p.status));\n\t});\n}\n\n/**\n * Check if response code is in the 2xx section\n * @param {Number} status\n * @returns {boolean}\n */\nfunction wasRequestSuccessful(status) {\n\treturn status >= 200 && status < 300;\n}\n\n/**\n *\n * @param {String} status\n * @returns {Number}\n */\nfunction getStatusCodeFromString(status) {\n\treturn parseInt(status.split(' ')[1]);\n}\n\n/**\n * @param {Array} propStats\n * @return {Object}\n */\nfunction reducePropStats(propStats) {\n\tconst propObjects = [{}];\n\n\tpropStats.forEach((propStat) => {\n\t\tpropObjects.push(propStat.properties);\n\t});\n\n\treturn Object.assign.apply(null, propObjects);\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport const DAV = 'DAV:';\nexport const IETF_CALDAV = 'urn:ietf:params:xml:ns:caldav';\nexport const IETF_CARDDAV = 'urn:ietf:params:xml:ns:carddav';\nexport const OWNCLOUD = 'http://owncloud.org/ns';\nexport const NEXTCLOUD = 'http://nextcloud.com/ns';\nexport const APPLE = 'http://apple.com/ns/ical/';\nexport const CALENDARSERVER = 'http://calendarserver.org/ns/';\n\nexport const NS_MAP = {\n\t'DAV:': 'd',\n\t'urn:ietf:params:xml:ns:caldav': 'cl',\n\t'urn:ietf:params:xml:ns:carddav': 'cd',\n\t'http://owncloud.org/ns': 'oc',\n\t'http://nextcloud.com/ns': 'nc',\n\t'http://apple.com/ns/ical/': 'aapl',\n\t'http://calendarserver.org/ns/': 'cs'\n};\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n// uuidv4 taken from https://stackoverflow.com/a/2117523\nexport function uuidv4() {\n\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n\t\tconst r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n\t\treturn v.toString(16).toUpperCase();\n\t});\n}\n\nexport function uid(prefix, suffix) {\n\tprefix = prefix || '';\n\tsuffix = suffix || '';\n\n\tif (prefix !== '') {\n\t\tprefix += '-';\n\t}\n\tif (suffix !== '') {\n\t\tsuffix = '.' + suffix;\n\t}\n\n\treturn prefix + uuidv4() + suffix;\n}\n\nexport function uri(start, isAvailable) {\n\tstart = start || '';\n\n\tlet uri = start.toString().toLowerCase()\n\t\t.replace(/\\s+/g, '-')           // Replace spaces with -\n\t\t.replace(/[^\\w\\-]+/g, '')       // Remove all non-word chars\n\t\t.replace(/\\-\\-+/g, '-')         // Replace multiple - with single -\n\t\t.replace(/^-+/, '')             // Trim - from start of text\n\t\t.replace(/-+$/, '');            // Trim - from end of text\n\n\tif (uri === '') {\n\t\turi = '-';\n\t}\n\n\tif (isAvailable(uri)) {\n\t\treturn uri;\n\t}\n\n\tif (uri.indexOf('-') === -1) {\n\t\turi = uri + '-1';\n\t\tif (isAvailable(uri)) {\n\t\t\treturn uri;\n\t\t}\n\t}\n\n\t// === false because !undefined = true, possible infinite loop\n\tdo {\n\t\tconst positionLastDash = uri.lastIndexOf('-');\n\t\tconst firstPart = uri.substr(0, positionLastDash);\n\t\tlet lastPart = uri.substr(positionLastDash + 1);\n\n\t\tif (lastPart.match(/^\\d+$/)) {\n\t\t\tlastPart = parseInt(lastPart);\n\t\t\tlastPart++;\n\n\t\t\turi = firstPart + '-' + lastPart;\n\t\t} else {\n\t\t\turi = uri + '-1';\n\t\t}\n\t} while(isAvailable(uri) === false);\n\n\treturn uri;\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nconst serializer = new XMLSerializer();\nfunction xmlify(xmlDoc, parent, json) {\n\tconst element = xmlDoc.createElementNS(json.name[0], json.name[1]);\n\n\tjson.attributes = json.attributes || [];\n\tjson.attributes.forEach((a) => {\n\t\tif (a.length === 2) {\n\t\t\telement.setAttribute(a[0], a[1]);\n\t\t} else {\n\t\t\telement.setAttributeNS(a[0], a[1], a[2]);\n\t\t}\n\t});\n\n\tif (json.value) {\n\t\telement.textContent = json.value;\n\t} else if (json.children) {\n\t\tjson.children.forEach((child) => {\n\t\t\txmlify(xmlDoc, element, child);\n\t\t});\n\t}\n\n\tparent.appendChild(element);\n}\n\nexport function getRootSkeleton()  {\n\tif (arguments.length === 0) {\n\t\treturn [{}, null];\n\t}\n\n\tconst skeleton = {\n\t\tname: arguments[0],\n\t\tchildren: []\n\t};\n\n\tlet childrenWrapper = skeleton.children;\n\n\tconst args = Array.prototype.slice.call(arguments, 1);\n\targs.forEach(function(argument) {\n\t\tconst level = {\n\t\t\tname: argument,\n\t\t\tchildren: []\n\t\t};\n\t\tchildrenWrapper.push(level);\n\t\tchildrenWrapper = level.children;\n\t});\n\n\treturn [skeleton, childrenWrapper];\n}\n\nexport function serialize(json) {\n\tjson = json || {};\n\tif (typeof json !== 'object' || !json.hasOwnProperty('name')) {\n\t\treturn '';\n\t}\n\n\tconst root = document.implementation.createDocument('', '', null);\n\txmlify(root, root, json);\n\n\treturn serializer.serializeToString(root);\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport default class DAVEventListener {\n\n\tconstructor() {\n\t\tthis._eventListeners = {};\n\t}\n\n\t/**\n\t * adds an event listener\n\t * @param {string} type\n\t * @param {function} listener\n\t * @param {object} options\n\t */\n\taddEventListener(type, listener, options={}) {\n\t\tthis._eventListeners[type] = this._eventListeners[type] || [];\n\t\tthis._eventListeners[type].push({listener, options});\n\t}\n\n\t/**\n\t * removes an event listener\n\t * @param {string} type\n\t * @param {function} listener\n\t * @param {object} options\n\t */\n\tremoveEventListener(type, listener, options={}) {\n\t\tif (!this._eventListeners[type]) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst index = this._eventListeners[type].findIndex(({sListener, sOptions}) => {\n\t\t\treturn listener === sListener && options === sOptions;\n\t\t});\n\t\tif (index === -1) {\n\t\t\treturn;\n\t\t}\n\t\tthis._eventListeners[type].splice(index, 1);\n\t}\n\n\t/**\n\t * dispatch event on object\n\t * @param {string} type\n\t * @param {DAVEvent} event\n\t */\n\tdispatchEvent(type, event) {\n\t\tif (!this._eventListeners[type]) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._eventListeners[type].forEach(({listener, options}) => {\n\t\t\tif (options.once) {\n\t\t\t\tthis.removeEventListener(type, listener, options);\n\t\t\t}\n\n\t\t\tlistener(event);\n\t\t});\n\t}\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport * as NS from \"../utility/namespaceUtility\";\n\n/**\n *\n * This parser is capable of parsing:\n * - {DAV:}acl\n * - {DAV:}displayname\n * - {DAV:}owner\n * - {DAV:}resourcetype\n * - {DAV:}sync-token\n *\n * @param {Object} props\n * @return {Object}\n */\nexport default function davCollectionParser(props) {\n\tconst parsed = {};\n\n\tObject.entries(props).forEach(([key, value]) => {\n\t\tif (mapper.hasOwnProperty(key)) {\n\t\t\tparsed[key] = mapper[key](key, value);\n\t\t}\n\t});\n\n\treturn parsed;\n}\n\nconst mapper = {\n\t'{DAV:}acl': acl,\n\t'{DAV:}displayname': simpleText,\n\t'{DAV:}owner': owner,\n\t'{DAV:}resourcetype': resourceType,\n\t'{DAV:}sync-token': simpleText\n};\n\nfunction simpleText(key, prop) {\n\treturn prop;\n}\n\n\nfunction acl(key, props) {\n\tconst simple = {};\n\n\tprops.forEach((prop) => {\n\t   const children = prop.childNodes;\n\n\t   let principal = null;\n\t   let privileges = [];\n\n\t   children.forEach((child) => {\n\t\t   if (child.namespaceURI === 'DAV:' && child.localName === 'principal') {\n\t\t\t   // TODO - this just assumes there is one href child\n\t\t\t   // should search for proper  child instead\n\t\t\t   principal = child.childNodes[0].textContent;\n\t\t   }\n\t\t   if (child.namespaceURI === 'DAV:' && child.localName === 'grant') {\n\t\t\t   const privilegeNodes = child.childNodes[0].childNodes;\n\t\t\t   privilegeNodes.forEach((privilegeNode) => {\n\t\t\t\t\tprivileges.push('{' + privilegeNode.namespaceURI + '}' + privilegeNode.localName)\n\t\t\t   });\n\t\t   }\n\t   });\n\n\t   if (principal) {\n\t\t   if (!simple[principal]) {\n\t\t\t   simple[principal] = privileges;\n\t\t   } else {\n\t\t\t\tsimple[principal] = simple[principal].concat(privileges);\n\t\t   }\n\t   }\n\t});\n\n\treturn simple;\n}\n\n\nfunction owner(key, prop) {\n\treturn prop[0].textContent;\n}\n\nfunction resourceType(key, prop) {\n\treturn prop.map((prop) => {\n\t\treturn '{' + prop.namespaceURI + '}' + prop.localName\n\t});\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n/**\n *\n * This function is capable of creating the propset xml structure for:\n * - {DAV:}displayname\n *\n * @param {Object} props\n * @return {Object}\n */\nexport default function davCollectionPropSet(props) {\n\tconst propSet = [];\n\n\tObject.entries(props).forEach(([key, value]) => {\n\n\t});\n\n\treturn propSet;\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport * as NS from '../utility/namespaceUtility'\nimport * as StringUtility from '../utility/stringUtility'\nimport * as XMLUtility from '../utility/xmlUtility'\nimport DAVEventListener from './davEventListener'\nimport davCollectionParser from \"../parser/davCollectionParser\"\n\nimport {debugFactory} from \"../debug\";\nimport davCollectionPropSet from \"../propset/davCollectionPropSet\";\nconst debug = debugFactory('DavCollection');\n\nexport class DavCollection extends DAVEventListener {\n\n\t/**\n\t * @param {Object} parent\n\t * @param {Request} request\n\t * @param {String} url\n\t * @param {Object} props\n\t */\n\tconstructor(parent, request, url, props) {\n\t\tsuper();\n\n\t\tObject.assign(this, {\n\t\t\t// parameters\n\t\t\t_parent: parent,\n\t\t\t_request: request,\n\t\t\t_url: url,\n\t\t\t_rawProps: props,\n\t\t\t// parsers / factories\n\t\t\t_props: {},\n\t\t\t_propFindList: [],\n\t\t\t_collectionFactoryMapper: {},\n\t\t\t_objectFactoryMapper: {},\n\t\t\t_propSetFactory: [],\n\t\t\t// housekeeping\n\t\t\t_isDirty: false,\n\t\t\t_updatedProperties: [],\n\t\t\t// keep track of elements inside\n\t\t\t_children: {}\n\t\t});\n\n\t\tthis._registerPropFindParser(davCollectionParser);\n\t\tthis._registerPropSetFactory(davCollectionPropSet);\n\n\t\tthis._exposeProperty('displayname', NS.DAV, 'displayname', true);\n\t\tthis._exposeProperty('acl', NS.DAV, 'acl');\n\t\tthis._exposeProperty('owner', NS.DAV, 'owner');\n\t\tthis._exposeProperty('resourcetype', NS.DAV, 'resourcetype');\n\t\tthis._exposeProperty('syncToken', NS.DAV, 'sync-token');\n\n\t\tObject.defineProperty(this, 'url', {\n\t\t\tget: () => this._url\n\t\t});\n\t}\n\n\t/**\n\t * TODO allow to filter properties\n\t */\n\tasync findAll() {\n\t\tconst allProps = await this._request.propFind(this._url, this._propFindList, 1);\n\t\tconst all = [];\n\n\t\tObject.entries(allProps).forEach(([path, props]) => {\n\t\t\t// The DAV Server will always return a propStat\n\t\t\t// block containing properties of the current url\n\t\t\t// we are not interested, so let's filter it out\n\t\t\tif (path === this._url) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._children[path] = false;\n\t\t\tconst url = this._request.pathname(path);\n\n\t\t\t// empty resourcetype property => this is no collection\n\t\t\tif (props['{DAV:}resourcetype'] === '') {\n\t\t\t\tdebug(`${path} was identified as a file`);\n\n\t\t\t\tconst contentType = props['{DAV:}getcontenttype'].split(';')[0];\n\t\t\t\tif (!this._objectFactoryMapper[contentType]) {\n\t\t\t\t\tdebug(`No constructor for content-type ${contentType} (${path}) registered`);\n\t\t\t\t}\n\n\t\t\t\tthis._children[path] = new this._objectFactoryMapper[contentType](this, this._request, url, props);\n\t\t\t} else {\n\t\t\t\tdebug(`${path} was identified as a collection`);\n\n\t\t\t\tconst collectionType = getCollectionType(props);\n\t\t\t\tif (!collectionType) {\n\t\t\t\t\tdebug(`Collection-type of ${path} was not specified, skipping`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!this._collectionFactoryMapper[collectionType]) {\n\t\t\t\t\tdebug(`No constructor for collection-type ${collectionType} (${path}) registered`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._children[path] = new this._collectionFactoryMapper[collectionType](this, this._request, url, props);\n\t\t\t}\n\n\t\t\tall.push(this._children[path]);\n\t\t});\n\n\t\treturn all;\n\t}\n\n\t/**\n\t * find one object by its uri\n\t * @param uri\n\t * @returns {Promise<DavObject>}\n\t */\n\tasync find(uri) {\n\t\t// TODO - implement me\n\t}\n\n\t/**\n\t *\n\t * @param {string} name\n\t * @param {Array} props\n\t * @returns {Promise<DavCollection>}\n\t */\n\tasync createCollection(name, props) {\n\t\tdebug('creating a collection');\n\n\t\tconst [skeleton, dPropChildren] = XMLUtility.getRootSkeleton(\n\t\t\t[NS.DAV, 'mkcol'],\n\t\t\t[NS.DAV, 'set'],\n\t\t\t[NS.DAV, 'prop']\n\t\t);\n\n\t\tprops.forEach((prop) => {\n\t\t\tdPropChildren.push(prop);\n\t\t});\n\n\t\tconst data = XMLUtility.serialize(skeleton);\n\t\tconst request = await this._request.mkCol(url, undefined, data);\n\t\tconsole.log(request);\n\t\t// TODO - create Collection object\n\t}\n\n\t/**\n\t *\n\t * @param {String} name\n\t * @param {Object} headers\n\t * @param {String} data\n\t * @returns {Promise<DavObject>}\n\t */\n\tasync createObject(name, headers, data) {\n\t\tdebug('creating an object');\n\n\t\tconst url = this.url + name;\n\t\tawait this._request.put(url, headers, data);\n\t\treturn this._request.find(url);\n\t}\n\n\t/**\n\t * deletes the DavObject on the server\n\t * @returns {Promise<void>}\n\t */\n\tasync delete() {\n\t\treturn this._request.delete(this._url);\n\t}\n\n\t/**\n\t * @protected\n\t * @param {String} identifier\n\t * @param {Function} factory\n\t * @returns void\n\t */\n\t_registerCollectionFactory(identifier, factory) {\n\t\tthis._collectionFactoryMapper[identifier] = factory;\n\t\tif (typeof factory.getPropFindList === 'function') {\n\t\t\tArray.prototype.push.apply(this._propFindList, factory.getPropFindList());\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t * @param {String} identifier\n\t * @param {Function} factory\n\t * @returns void\n\t */\n\t_registerObjectFactory(identifier, factory) {\n\t\tthis._objectFactoryMapper[identifier] = factory;\n\t\tif (typeof factory.getPropFindList === 'function') {\n\t\t\tArray.prototype.push.apply(this._propFindList, factory.getPropFindList());\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t * @param {Function} parser\n\t * @returns void\n\t */\n\t_registerPropFindParser(parser) {\n\t\tObject.assign(this._props, parser(this._rawProps));\n\t}\n\n\t/**\n\t * @protected\n\t * @param factory\n\t * @returns void\n\t */\n\t_registerPropSetFactory(factory) {\n\t\tthis._propSetFactory.push(factory);\n\t}\n\n\t/**\n\t * @protected\n\t * @param {String} localName\n\t * @param {String}xmlNamespace\n\t * @param {String}xmlName\n\t * @param {boolean} mutable\n\t * @returns void\n\t */\n\t_exposeProperty(localName, xmlNamespace, xmlName, mutable=false) {\n\t\tif (mutable) {\n\t\t\tObject.defineProperty(this, localName, {\n\t\t\t\tget: () => this._props[`{${xmlNamespace}}${xmlName}`],\n\t\t\t\tset: (val) => {\n\t\t\t\t\tthis._props[`{${xmlNamespace}}${xmlName}`] = val\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tObject.defineProperty(this, localName, {\n\t\t\t\tget: () => this._props[`{${xmlNamespace}}${xmlName}`]\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t * @param {String} token\n\t * @returns {String}\n\t */\n\t_getAvailableNameFromToken(token) {\n\t\tconst takenKeys = Object.keys(this._children);\n\n\t\treturn StringUtility.uri(token, name => {\n\t\t\treturn takenKeys.indexOf(this._url + name) === -1 &&\n\t\t\t\ttakenKeys.indexOf(this._url + name + '/') === -1;\n\t\t});\n\t}\n\n\t/**\n\t *\n\t * @returns {string[][]}\n\t */\n\tstatic getPropFindList() {\n\t\treturn [\n\t\t\t[NS.DAV, 'acl'],\n\t\t\t[NS.DAV, 'displayname'],\n\t\t\t[NS.DAV, 'owner'],\n\t\t\t[NS.DAV, 'resourcetype'],\n\t\t\t[NS.DAV, 'sync-token']\n\t\t];\n\t}\n}\n\n/**\n *\n */\nfunction getCollectionType(props) {\n\tif (!props['{' + NS.DAV + '}resourcetype']) {\n\t\treturn null;\n\t}\n\n\tconst type = props['{' + NS.DAV + '}resourcetype'].find((e) => {\n\t\treturn (getNodesClarkeName(e) !== '{' + NS.DAV + '}collection');\n\t});\n\tif (!type) {\n\t\treturn null;\n\t}\n\n\treturn getNodesClarkeName(type);\n}\n\n/**\n *\n * @param node\n * @returns {string}\n */\nfunction getNodesClarkeName(node) {\n\treturn '{' + node.namespaceURI + '}' + node.localName;\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport * as NS from \"../utility/namespaceUtility\";\nimport davCollectionPublishableParser from \"../parser/davCollectionPublishableParser\";\n\nimport {debugFactory} from \"../debug\";\nconst debug = debugFactory('DavCollectionPublishable');\n\nexport function davCollectionPublishable(Base) {\n\treturn class extends Base {\n\n\t\t/**\n\t\t * @param {Object} parent\n\t\t * @param {Request} request\n\t\t * @param {String} url\n\t\t * @param {Object} props\n\t\t */\n\t\tconstructor(parent, request, url, props) {\n\t\t\tsuper(parent, request, url, props);\n\n\t\t\t// this._props = Object.assign({},\n\t\t\t//     davCollectionPublishableParser(props),\n\t\t\t//     this._props);\n\t\t\t//\n\t\t\t// Object.defineProperties(this, {\n\t\t\t//     // immutable properties\n\t\t\t//     publicToken: {\n\t\t\t//         get: () => {\n\t\t\t//\n\t\t\t//         }\n\t\t\t//     }\n\t\t\t// })\n\t\t}\n\n\t\tasync publish() {\n\t\t\t// TODO - implement me\n\t\t}\n\n\t\tasync unpublish() {\n\t\t\t// TODO - implement me\n\n\t\t}\n\n\t\tstatic getPropFindList() {\n\t\t\treturn super.getPropFindList().concat([\n\t\t\t\t[NS.CALENDARSERVER, 'publish-url']\n\t\t\t]);\n\t\t}\n\t}\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport * as NS from '../utility/namespaceUtility'\nimport davCollectionShareableParser from \"../parser/davCollectionShareableParser\";\n\nimport {debugFactory} from \"../debug\";\nconst debug = debugFactory('DavCollectionShareable');\n\nexport function davCollectionShareable(Base) {\n\treturn class extends Base {\n\n\t\t/**\n\t\t * @param {Object} parent\n\t\t * @param {Request} request\n\t\t * @param {String} url\n\t\t * @param {Object} props\n\t\t */\n\t\tconstructor(parent, request, url, props) {\n\t\t\tsuper(parent, request, url, props);\n\n\t\t\t// this._props = Object.assign({},\n\t\t\t//     davCollectionShareableParser(props),\n\t\t\t//     this._props);\n\t\t\t//\n\t\t\t// Object.defineProperties(this, {\n\t\t\t//     // immutable properties\n\t\t\t//     shares: {}\n\t\t\t// })\n\t\t}\n\n\t\t/**\n\t\t *\n\t\t */\n\t\tasync share() {\n\t\t\t// TODO - implement me\n\t\t}\n\n\t\t/**\n\t\t *\n\t\t */\n\t\tasync unshare() {\n\t\t\t// TODO - implement me\n\t\t}\n\n\t\tstatic getPropFindList() {\n\t\t\treturn super.getPropFindList().concat([\n\t\t\t\t[NS.OWNCLOUD, 'invite'],\n\t\t\t\t[NS.CALENDARSERVER, 'allowed-sharing-modes']\n\t\t\t]);\n\t\t}\n\t}\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n/**\n *\n * This parser is capable of parsing:\n * - {http://apple.com/ns/ical/}calendar-order\n * - {http://apple.com/ns/ical/}calendar-color\n * - {http://calendarserver.org/ns/}getctag\n * - {http://calendarserver.org/ns/}source\n * - {urn:ietf:params:xml:ns:caldav}calendar-description\n * - {urn:ietf:params:xml:ns:caldav}calendar-timezone\n * - {urn:ietf:params:xml:ns:caldav}supported-calendar-component-set\n * - {urn:ietf:params:xml:ns:caldav}supported-calendar-data\n * - {urn:ietf:params:xml:ns:caldav}max-resource-size\n * - {urn:ietf:params:xml:ns:caldav}min-date-time\n * - {urn:ietf:params:xml:ns:caldav}max-date-time\n * - {urn:ietf:params:xml:ns:caldav}max-instances\n * - {urn:ietf:params:xml:ns:caldav}max-attendees-per-instance\n * - {urn:ietf:params:xml:ns:caldav}supported-collation-set\n * - {http://owncloud.org/ns}calendar-enabled\n * - {http://nextcloud.com/ns}owner-displayname\n *\n * @param {Object} props\n * @return {Object}\n */\nexport default function calendarParser(props) {\n\tconst parsed = {};\n\n\tObject.entries(props).forEach(([key, value]) => {\n\t\tif (mapper.hasOwnProperty(key)) {\n\t\t\tparsed[key] = mapper[key](key, value);\n\t\t}\n\t});\n\n\treturn parsed;\n}\n\nconst mapper = {\n\t'{http://apple.com/ns/ical/}calendar-order': simpleInt,\n\t'{http://apple.com/ns/ical/}calendar-color': calendarColor,\n\t'{http://calendarserver.org/ns/}getctag': simpleText,\n\t'{http://calendarserver.org/ns/}source': source,\n\t'{urn:ietf:params:xml:ns:caldav}calendar-description': calendarDescription,\n\t'{urn:ietf:params:xml:ns:caldav}calendar-timezone': calendarTimezone,\n\t'{urn:ietf:params:xml:ns:caldav}supported-calendar-component-set': supportedCalendarComponentSet,\n\t'{urn:ietf:params:xml:ns:caldav}supported-calendar-data': supportedCalendarData,\n\t'{urn:ietf:params:xml:ns:caldav}max-resource-size': simpleInt,\n\t'{urn:ietf:params:xml:ns:caldav}min-date-time': minDateTime,\n\t'{urn:ietf:params:xml:ns:caldav}max-date-time': maxDateTime,\n\t'{urn:ietf:params:xml:ns:caldav}max-instances': maxInstances,\n\t'{urn:ietf:params:xml:ns:caldav}max-attendees-per-instance': maxAttendeesPerInstance,\n\t'{urn:ietf:params:xml:ns:caldav}supported-collation-set': supportedCollationSet,\n\t'{http://owncloud.org/ns}calendar-enabled': simpleBool,\n\t'{http://nextcloud.com/ns}owner-displayname': simpleText\n};\n\nfunction simpleText(key, prop) {\n\treturn prop;\n}\n\nfunction simpleInt(key, prop) {\n\treturn parseInt(prop, 10);\n}\n\nfunction simpleBool(key, prop) {\n\treturn prop === '1';\n}\n\nfunction calendarColor(key, prop) {\n\t// some stupid clients store an alpha value in the rgb hash (like #rrggbbaa) *cough cough* Apple Calendar *cough cough*\n\t// but some browsers can't parse that *cough cough* Safari 9 *cough cough*\n\t// Safari 10 seems to support this though\n\tif (prop.length === 9) {\n\t\treturn prop.substr(0,7);\n\t}\n\n\treturn prop;\n}\n\nfunction source(key, prop) {\n\n}\n\nfunction calendarDescription(key, prop) {\n\n}\n\nfunction calendarTimezone(key, prop) {\n\n}\n\nfunction supportedCalendarComponentSet(key, prop) {\n\tconst simpleComponents = {\n\t\tvevent: false,\n\t\tvjournal: false,\n\t\tvtodo: false\n\t};\n\n\tprop.forEach(function(component) {\n\t\tconst name = component.attributes.getNamedItem('name').textContent.toLowerCase();\n\n\t\tif (simpleComponents.hasOwnProperty(name)) {\n\t\t\tsimpleComponents[name] = true;\n\t\t}\n\t});\n\n\treturn simpleComponents;\n}\n\nfunction supportedCalendarData(key, prop) {\n\n}\n\nfunction minDateTime(key, prop) {\n\n}\n\nfunction maxDateTime(key, prop) {\n\n}\n\nfunction maxInstances(key, prop) {\n\n}\n\nfunction maxAttendeesPerInstance(key, prop) {\n\n}\n\nfunction supportedCollationSet(key, prop) {\n\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport DAVEventListener from \"./davEventListener\";\n\nimport {debugFactory} from \"../debug\";\nimport * as NS from \"../utility/namespaceUtility\";\nconst debug = debugFactory('DavObject');\n\n/**\n * @class\n * @classdesc Generic DavObject aka file\n */\nexport class DavObject extends DAVEventListener {\n\n\t/**\n\t * @param {DavCollection} parent\n\t * @param {Request} request\n\t * @param {String} url\n\t * @param {Object} props\n\t * @param {boolean} isFiltered\n\t */\n\tconstructor(parent, request, url, props, isFiltered=false) {\n\t\tsuper();\n\n\t\tObject.assign(this, {\n\t\t\t// parameters\n\t\t\t_parent: parent,\n\t\t\t_request: request,\n\t\t\t_url: url,\n\t\t\t_props: props,\n\t\t\t// housekeeping\n\t\t\t_isFiltered: isFiltered,\n\t\t\t_isDirty: false\n\t\t});\n\n\t\tthis._exposeProperty('etag', NS.DAV, 'getetag');\n\t\tthis._exposeProperty('contenttype', NS.DAV, 'getcontenttype');\n\n\t\tObject.defineProperty(this, 'url', {\n\t\t\tget: () => this._url\n\t\t});\n\t}\n\n\t/**\n\t * gets unfiltered data for this object\n\t * @returns {Promise<void>}\n\t */\n\tasync getUnfilteredData() {\n\t\tif (!this._isFiltered) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO - also get latest ETAG and other props?\n\t\tconst newData = await this._request.get(this._url);\n\t\tthis.data = data;\n\n\t\tthis._isDirty = false;\n\t\tthis._isFiltered = false;\n\t}\n\n\t/**\n\t * copies a DavObject to a different DavCollection\n\t * @param {DavCollection} collection\n\t * @returns {Promise<DavObject>} Promise that resolves to the copied DavObject\n\t */\n\tasync copy(collection) {\n\t\t// TODO: implement me\n\t\t// TODO: compare resourcetype of both collections, current and destination\n\t}\n\n\t/**\n\t * moves a DavObject to a different DavCollection\n\t * @param {DavCollection} collection\n\t * @returns {Promise<void>}\n\t */\n\tasync move(collection) {\n\t\t// TODO: implement me\n\t\t// TODO: compare resourcetype of both collections, current and destination\n\t}\n\n\t/**\n\t * updates the DavObject on the server\n\t * @returns {Promise<void>}\n\t */\n\tasync update() {\n\t\t// don't update filtered object because we would\n\t\t// delete all other properties on the server\n\t\tif (this._isFiltered) {\n\t\t\treturn;\n\t\t}\n\n\t\t// no need to update the object if it was not modified\n\t\tif (!this._isDirty) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst headers = {\n\t\t\t'If-Match': this.etag,\n\t\t};\n\n\t\treturn this._request.put(this.url, headers, this.data).then((res) => {\n\t\t\tthis._isDirty = false;\n\t\t\treturn res;\n\t\t});\n\t}\n\n\t/**\n\t * deletes the DavObject on the server\n\t * @returns {Promise<void>}\n\t */\n\tasync delete() {\n\t\treturn this._request.delete(this.url);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tisFiltered() {\n\t\treturn this._isFiltered;\n\t}\n\n\t/**\n\t * @protected\n\t * @param {String} localName\n\t * @param {String}xmlNamespace\n\t * @param {String}xmlName\n\t * @param {boolean} mutable\n\t * @returns void\n\t */\n\t_exposeProperty(localName, xmlNamespace, xmlName, mutable=false) {\n\t\tif (mutable) {\n\t\t\tObject.defineProperty(this, localName, {\n\t\t\t\tget: () => this._props[`{${xmlNamespace}}${xmlName}`],\n\t\t\t\tset: (val) => {\n\t\t\t\t\tthis._isDirty = true;\n\t\t\t\t\tthis._props[`{${xmlNamespace}}${xmlName}`] = val;\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tObject.defineProperty(this, localName, {\n\t\t\t\tget: () => this._props[`{${xmlNamespace}}${xmlName}`]\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @returns {string[][]}\n\t */\n\tstatic getPropFindList() {\n\t\treturn [\n\t\t\t[NS.DAV, 'getcontenttype'],\n\t\t\t[NS.DAV, 'getetag'],\n\t\t\t[NS.DAV, 'resourcetype']\n\t\t];\n\t}\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport {DavObject} from \"./davObject\";\nimport * as NS from \"../utility/namespaceUtility\";\n\nimport {debugFactory} from \"../debug\";\nconst debug = debugFactory('VObject');\n\n/**\n * @class\n */\nexport class VObject extends DavObject {\n\n\t/**\n\t *\n\t * @param {DavCollection} parent\n\t * @param {Request} request\n\t * @param {String} url\n\t * @param {Object} props\n\t * @param {boolean} isFiltered\n\t */\n\tconstructor(parent, request, url, props, isFiltered) {\n\t\tsuper(parent, request, url, props, isFiltered);\n\n\t\tsuper._exposeProperty('data', NS.IETF_CALDAV, 'calendar-data', true);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic getPropFindList() {\n\t\treturn super.getPropFindList().concat([\n\t\t\t[NS.IETF_CALDAV, 'calendar-data'],\n\t\t]);\n\t}\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n/**\n *\n * This function is capable of creating the propset xml structure for:\n * - {http://apple.com/ns/ical/}calendar-order\n * - {http://apple.com/ns/ical/}calendar-color\n * - {http://calendarserver.org/ns/}source\n * - {urn:ietf:params:xml:ns:caldav}calendar-description\n * - {urn:ietf:params:xml:ns:caldav}calendar-timezone\n * - {http://owncloud.org/ns}calendar-enabled\n *\n * @param {Object} props\n * @return {Object}\n */\nexport default function calendarPropSet(props) {\n\tconst propSet = [];\n\n\tObject.entries(props).forEach(([key, value]) => {\n\n\t});\n\n\treturn propSet;\n}\n\nfunction simpleString(key, value) {\n\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport {davCollectionPublishable} from \"./davCollectionPublishable\";\nimport {davCollectionShareable} from \"./davCollectionShareable\";\nimport {DavCollection} from \"./davCollection\";\nimport * as NS from \"../utility/namespaceUtility\";\nimport * as StringUtility from \"../utility/stringUtility\";\nimport calendarParser from \"../parser/calendarParser\";\n\nimport {debugFactory} from \"../debug\";\nimport {VObject} from \"./vobject\";\nimport calendarPropSet from \"../propset/calendarPropSet\";\nconst debug = debugFactory('Calendar');\n\n/**\n * @class\n * @classdesc Collection of VObject objects\n * @augments DavCollection\n */\nexport class Calendar extends davCollectionPublishable(davCollectionShareable(DavCollection)) {\n\n    /**\n     * @param {Object} parent\n     * @param {Request} request\n     * @param {String} url\n     * @param {Object} props\n     */\n    constructor(parent, request, url, props) {\n        super(parent, request, url, props);\n\n        super._registerObjectFactory('text/calendar', VObject);\n        super._registerPropFindParser(calendarParser);\n        super._registerPropSetFactory(calendarPropSet);\n\n        super._exposeProperty('color', NS.APPLE, 'calendar-color', true);\n        super._exposeProperty('enabled', NS.OWNCLOUD, 'calendar-enabled', true);\n        super._exposeProperty('order', NS.APPLE, 'calendar-order', true);\n        super._exposeProperty('timezone', NS.IETF_CALDAV, 'calendar-timezone', true);\n        super._exposeProperty('components', NS.IETF_CALDAV, 'supported-calendar-component-set');\n    }\n\n    /**\n     * find multiple VObjects by their uri\n     * @param {Array} uris\n     * @returns {Promise<VObject[]>}\n     */\n    async findMultiple(uris) {\n        // TODO - implement me\n    }\n\n    /**\n     * find all VObjects filtered by type\n     * @param {number} type\n     * @returns {Promise<VObject[]>}\n     */\n    async findByType(type) {\n        // TODO - implement me\n    }\n\n    /**\n     * find all VObjects in a time-range\n     * @param {Date} from\n     * @param {Date} to\n     * @returns {Promise<VObject[]>}\n     */\n    async findInTimeRange(from, to) {\n        // TODO - implement me\n    }\n\n    /**\n     * find all VObjects in a time-range filtered by type\n     * @param {number} type\n     * @param {Date} from\n     * @param {Date} to\n     * @returns {Promise<VObject[]>}\n     */\n    async findByTypeInTimeRange(type, from, to) {\n        // TODO - implement me\n    }\n\n    /**\n     * use CalDAV native search\n     * @returns {Promise<VObject[]>}\n     */\n    async search() {\n        // TODO - implement me\n    }\n\n    /**\n     * create a VObject inside this calendar\n     * @returns {Promise<VObject>}\n     */\n    async createVObject(data) {\n        const name = StringUtility.uid('', 'ics');\n        const headers = {\n            'Content-Type': 'text/calendar; charset=utf-8'\n        };\n\n        return super.createObject(name, headers, data);\n    }\n\n    /**\n     * @inheritDoc\n     */\n    static getPropFindList() {\n        return super.getPropFindList().concat([\n            [NS.APPLE, 'calendar-order'],\n            [NS.APPLE, 'calendar-color'],\n            [NS.CALENDARSERVER, 'getctag'],\n            [NS.CALENDARSERVER, 'source'],\n            [NS.IETF_CALDAV, 'calendar-description'],\n            [NS.IETF_CALDAV, 'calendar-timezone'],\n            [NS.IETF_CALDAV, 'supported-calendar-component-set'],\n            [NS.IETF_CALDAV, 'supported-calendar-data'],\n            [NS.IETF_CALDAV, 'max-resource-size'],\n            [NS.IETF_CALDAV, 'min-date-time'],\n            [NS.IETF_CALDAV, 'max-date-time'],\n            [NS.IETF_CALDAV, 'max-instances'],\n            [NS.IETF_CALDAV, 'max-attendees-per-instance'],\n            [NS.IETF_CALDAV, 'supported-collation-set'],\n            [NS.OWNCLOUD, 'calendar-enabled'],\n            [NS.NEXTCLOUD, 'owner-displayname']\n        ]);\n    }\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport {DavCollection} from \"./davCollection\";\n\nimport {debugFactory} from \"../debug\";\nconst debug = debugFactory('Subscription');\n\nexport class Subscription extends DavCollection {\n\n}","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {DavCollection} from \"./davCollection\";\n\nimport {debugFactory} from \"../debug\";\nconst debug = debugFactory('ScheduleInbox');\n\nexport default class ScheduleInbox extends DavCollection {}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {DavCollection} from \"./davCollection\";\n\nimport {debugFactory} from \"../debug\";\nconst debug = debugFactory('ScheduleOutbox');\n\nexport default class ScheduleOutbox extends DavCollection {}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {DavCollection} from \"./davCollection\";\nimport {Calendar} from \"./calendar\";\nimport {Subscription} from \"./subscription\";\nimport ScheduleInbox from \"./scheduleInbox\";\nimport ScheduleOutbox from \"./scheduleOutbox\";\nimport * as NS from '../utility/namespaceUtility'\n\nimport {debugFactory} from \"../debug\";\nconst debug = debugFactory('CalendarHome');\n\n/**\n * @class\n * @classdesc Collection of Calendar objects\n */\nexport class CalendarHome extends DavCollection {\n\n    /**\n     * @param {DavClient} parent\n     * @param {Request} request\n     * @param {String} url\n     * @param {Object} props\n     */\n    constructor(parent, request, url, props) {\n        super(parent, request, url, props);\n\n        super._registerCollectionFactory('{' + NS.IETF_CALDAV + '}calendar', Calendar);\n        super._registerCollectionFactory('{' + NS.CALENDARSERVER + '}subscribed', Subscription);\n        super._registerCollectionFactory('{' + NS.IETF_CALDAV + '}schedule-inbox', ScheduleInbox);\n        super._registerCollectionFactory('{' + NS.IETF_CALDAV + '}schedule-outbox', ScheduleOutbox);\n    }\n\n    /**\n     * creates a new calendar\n     * @param {String} displayname\n     * @param {String} color\n     * @returns {Promise<Calendar>}\n     */\n    async createCalendarCollection(displayname, color) {\n        debug('creating a calendar collection');\n\n        const props = [{\n            name: [NS.DAV, 'resourcetype'],\n            children: [{\n                name: [NS.DAV, 'collection']\n            }, {\n                name: [NS.IETF_CALDAV, 'calendar']\n            }]\n        }, {\n            name: [NS.DAV, 'displayname'],\n            value: displayname\n        }, {\n            name: [NS.APPLE, 'calendar-color'],\n            value: color\n        }, {\n            name: [NS.OWNCLOUD, 'calendar-enabled'],\n            value: '1'\n        }];\n\n        const name = super._getAvailableNameFromToken(displayname);\n        return super.createCollection(name, props);\n    }\n\n    /**\n     * @param {String} displayname\n     * @param {String} color\n     * @param {String} source\n     * @returns {Promise<Subscription>}\n     */\n    async createSubscribedCollection(displayname, color, source) {\n        debug('creating a subscribed collection');\n\n        const props = [{\n            name: [NS.DAV, 'resourcetype'],\n            children: [{\n                name: [NS.DAV, 'collection']\n            }, {\n                name: [NS.CALENDARSERVER, 'subscribed']\n            }]\n        }, {\n            name: [NS.DAV, 'displayname'],\n            value: displayname\n        }, {\n            name: [NS.APPLE, 'calendar-color'],\n            value: color\n        }, {\n            name: [NS.OWNCLOUD, 'calendar-enabled'],\n            value: '1'\n        }, {\n            name: [NS.CALENDARSERVER, 'source'],\n            children: [{\n                name: [NS.DAV, 'href'],\n                value: source\n            }]\n        }];\n\n        const name = super._getAvailableNameFromToken(displayname);\n        return super.createCollection(name, props);\n    }\n\n    /**\n     * Search all calendars the user has access to\n     * This method makes use of Nextcloud's custom\n     * calendar Search API\n     *\n     * Documentation about that API can be found at: ...\n     *\n     * @returns {Promise<VObject[]>}\n     */\n    async search() {\n        // TODO - implement me\n    }\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n/**\n *\n * This parser is capable of parsing:\n * - {urn:ietf:params:xml:ns:carddav}addressbook-description\n * - {urn:ietf:params:xml:ns:carddav}supported-address-data\n * - {urn:ietf:params:xml:ns:carddav}max-resource-size\n * - {http://calendarserver.org/ns/}getctag\n * - {http://owncloud.org/ns}enabled\n * - {http://owncloud.org/ns}read-only\n *\n * @param {Object} props\n * @return {Object}\n */\nexport default function addressBookParser(props) {\n\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n/**\n *\n * This function is capable of creating the propset xml structure for:\n * - {urn:ietf:params:xml:ns:carddav}addressbook-description\n * - {http://owncloud.org/ns}enabled\n *\n * @param {Object} props\n * @return {Object}\n */\nexport default function addressBookPropSet(props) {\n\tconst propSet = [];\n\n\tObject.entries(props).forEach(([key, value]) => {\n\n\t});\n\n\treturn propSet;\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport {davCollectionShareable} from \"./davCollectionShareable\";\nimport {DavCollection} from \"./davCollection\";\nimport * as NS from \"../utility/namespaceUtility\";\nimport * as StringUtility from '../utility/stringUtility'\nimport addressBookParser from \"../parser/addressbookParser\";\nimport addressBookPropSet from \"../propset/addressBookPropSet\";\n\nimport {debugFactory} from \"../debug\";\nconst debug = debugFactory('AddressBook');\n\n/**\n * @class\n * @classdesc Collection of VCard objects\n */\nexport class AddressBook extends davCollectionShareable(DavCollection) {\n\n\t/**\n\t * @param {Object} parent\n\t * @param {Request} request\n\t * @param {String} url\n\t * @param {Object} props\n\t */\n\tconstructor(parent, request, url, props) {\n\t\tsuper(parent, request, url, props);\n\n\t\tsuper._registerObjectFactory('text/vcard', AddressBook);\n\t\tsuper._registerPropFindParser(addressBookParser);\n\t\tsuper._registerPropSetFactory(addressBookPropSet);\n\n\t\tsuper._exposeProperty('description', NS.IETF_CARDDAV, 'addressbook-description', true);\n\t\tsuper._exposeProperty('enabled', NS.OWNCLOUD, 'enabled', true);\n\t\tsuper._exposeProperty('readOnly', NS.OWNCLOUD, 'read-only');\n\t}\n\n\t// <card:prop name=\"EMAIL\"/><card:prop name=\"UID\"/><card:prop name=\"CATEGORIES\"/><card:prop name=\"FN\"/><card:prop name=\"TEL\"/><card:prop name=\"NICKNAME\"/><card:prop name=\"N\"/>\n\t//           </card:address-data>\n\n\t/**\n\t * find multiple objects by their uri\n\t * @param {Array} uris\n\t * @returns {Promise<VCard[]>}\n\t */\n\tasync findMultiple(uris) {\n\t\t// TODO - implement me\n\t}\n\n\n\t/**\n\t * creates a new VCard object in this address book\n\t * @param {String} data\n\t * @returns {Promise<VCard>}\n\t */\n\tasync createVCard(data) {\n\t\tdebug('creating VCard object');\n\n\t\tconst name = StringUtility.uid('', '.vcard');\n\t\tconst headers = {\n\t\t\t'Content-Type': 'text/vcard; charset=utf-8'\n\t\t};\n\n\t\treturn super.createObject(name, headers, data);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic getPropFindList() {\n\t\treturn super.getPropFindList().concat([\n\t\t\t[NS.IETF_CARDDAV, 'addressbook-description'],\n\t\t\t[NS.IETF_CARDDAV, 'supported-address-data'],\n\t\t\t[NS.IETF_CARDDAV, 'max-resource-size'],\n\t\t\t[NS.CALENDARSERVER, 'getctag'],\n\t\t\t[NS.OWNCLOUD, 'enabled'],\n\t\t\t[NS.OWNCLOUD, 'read-only']\n\t\t]);\n\t}\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport {DavCollection} from \"./davCollection\";\nimport * as NS from \"../utility/namespaceUtility\";\nimport {AddressBook} from \"./addressbook\";\n\nimport {debugFactory} from \"../debug\";\nconst debug = debugFactory('AddressBookHome');\n\n/**\n * @class\n * @classdesc Collection of AddressBook objects\n */\nexport class AddressBookHome extends DavCollection {\n\n    /**\n     * @param {Object} parent\n     * @param {Request} request\n     * @param {String} url\n     * @param {Object} props\n     */\n    constructor(parent, request, url, props) {\n        super(parent, request, url, props);\n\n        super._registerCollectionFactory('{' + NS.IETF_CARDDAV + '}addressbook', AddressBook);\n    }\n\n    /**\n     * creates a new addressbook\n     * @param {String} displayname\n     * @returns {Promise<AddressBook>}\n     */\n    async createAddressBookCollection(displayname) {\n        debug('creating an addressbook collection');\n\n        const props = [{\n            name: [NS.DAV, 'resourcetype'],\n            children: [{\n                name: [NS.DAV, 'collection']\n            }, {\n                name: [NS.IETF_CARDDAV, 'addressbook']\n            }]\n        }, {\n            name: [NS.DAV, 'displayname'],\n            value: displayname\n        }];\n\n        const name = super._getAvailableNameFromToken(displayname);\n        return super.createCollection(name, props);\n    }\n}\n","/**\n * CDAV Library\n *\n * This library is part of the Nextcloud project\n *\n * @author Georg Ehrke\n * @copyright 2018 Georg Ehrke <oc.list@georgehrke.com>\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU AFFERO GENERAL PUBLIC LICENSE for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with this library.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport Request from \"./request\";\nimport * as NS from \"./utility/namespaceUtility\";\nimport {CalendarHome} from \"./models/calendarHome\";\nimport {AddressBookHome} from \"./models/addressbookHome\";\n\nimport {debugFactory} from \"./debug\";\nconst debug = debugFactory('index.js');\n\n// export debugFactory, so users can enable debug mode\n// cdav.debug.enabled = true\nexport {debugFactory as debug, NS as namespaces};\n\n/**\n *\n */\nexport class DavClient {\n\n\t/**\n\t * @param {Object} options\n\t * @param {Function} xhrProvider\n\t * @param {Object} factories\n\t */\n\tconstructor(options, xhrProvider = null, factories = {}) {\n\t\tObject.assign(this, {\n\t\t\trootUrl: null,\n\t\t}, options);\n\n\t\tObject.assign(this, {\n\t\t\tadvertisedFeatures: [],\n\t\t\tprincipalUrl: null,\n\t\t\tcalendarHomes: [],\n\t\t\taddressbookHomes: [],\n\t\t});\n\n\t\tdebugFactory.debug = options.debug || false;\n\t\tthis._request = new Request(this.rootUrl, xhrProvider);\n\t}\n\n\t/**\n\t * initializes the DAVClient\n\t * @param {Object} options\n\t * @returns {Promise<void>}\n\t */\n\tasync connect(options={enableCalDAV: true, enableCardDAV: true}) {\n\t\t// we don't support rfc 6764 for now - Pull-requests welcome :)\n\t\tif (!this.rootUrl) {\n\t\t\tthrow new Error('No rootUrl configured');\n\t\t}\n\n\t\tthis.principalUrl = await principalUrl(this, this._request);\n\t\tdebug(`PrincipalURL: ${this.principalUrl}`);\n\n\t\tif (options.enableCalDAV) {\n\t\t\tdebug(`loading calendar-homes`);\n\t\t\tthis.calendarHomes = await calendarHomeUrls(this, this._request);\n\t\t}\n\t\tif (options.enableCardDAV) {\n\t\t\tdebug(`loading addressbook-homes`);\n\t\t\tthis.addressbookHomes = await addressbookHomeUrls(this, this._request);\n\t\t}\n\t}\n\n\t// /**\n\t//  * @returns {Promise<[any , any , any , any , any , any , any , any , any , any]>}\n\t//  */\n\t// async sync() {\n\t//     const promises = [];\n\t//\n\t//     // Ideally we would also check for new calendar-homes and\n\t//     // new addressbook-homes as well, but then Nextcloud will\n\t//     // ever only send provide one each, so we omit this step\n\t//     // to cut down network traffic\n\t//\n\t//     this.calendarHomes.forEach((calendarHome) => {\n\t//         promises.push(calendarHome.sync());\n\t//     });\n\t//     this.addressbookHomes.forEach((addressbookHome) => {\n\t//         promises.push(addressbookHome.sync());\n\t//     });\n\t//\n\t//     return Promise.all(promises);\n\t// }\n\n\t/**\n\t *\n\t * @returns {Promise<void>}\n\t */\n\tasync principalPropertySearch() {\n\t\t// TODO - implement me\n\t}\n}\n\nexport class CalDAVClient extends DavClient {\n\n\t/**\n\t * initializes the CalDAV client\n\t * @returns {Promise<void>}\n\t */\n\tasync connect() {\n\t\treturn super.connect({enableCalDAV: true});\n\t}\n}\n\n/**\n *\n */\nexport class CardDAVClient extends DavClient {\n\n\t/**\n\t * initializes the CardDAV client\n\t * @returns {Promise<void>}\n\t */\n\tasync connect() {\n\t\treturn super.connect({enableCardDAV: true});\n\t}\n}\n\n/**\n * discover the principalURL of the user\n * @param account\n * @param request\n * @returns {Promise<void>}\n */\nasync function principalUrl(account, request) {\n\tconst props = await request.propFind(account.rootUrl, [\n\t\t[NS.DAV, 'current-user-principal'],\n\t], 0);\n\n\treturn request.pathname(props[\"{DAV:}current-user-principal\"][0].textContent);\n}\n\n/**\n * get all addressbook homes for the CardDAV account\n *\n * This will commonly be just one addressbook home,\n * nevertheless does CardDAV allow multiple homes.\n * @param account\n * @param request\n * @returns {Promise<void>}\n */\nasync function addressbookHomeUrls(account, request) {\n\tconst props = await request.propFind(account.principalUrl, [\n\t\t[NS.IETF_CARDDAV, 'addressbook-home-set']\n\t], 0);\n\n\tconst addressbookHomes = props[\"{urn:ietf:params:xml:ns:carddav}addressbook-home-set\"];\n\n\treturn addressbookHomes.map((addressbookHome) => {\n\t\tconst url = request.pathname(addressbookHome.textContent);\n\t\treturn new AddressBookHome(account, request, url, props);\n\t});\n}\n\n/**\n * get all calendar homes for the CalDAV account\n *\n * This will commonly be just one calendar home,\n * nevertheless does CalDAV allow multiple homes.\n * @param account\n * @param request\n * @returns {Promise<void>}\n */\nasync function calendarHomeUrls(account, request) {\n\tconst props = await request.propFind(account.principalUrl, [\n\t\t[NS.IETF_CALDAV, 'calendar-home-set'],\n\t\t[NS.DAV, 'principal-collection-set'],\n\t\t[NS.IETF_CALDAV, 'calendar-user-address-set'],\n\t\t[NS.IETF_CALDAV, 'schedule-inbox-URL'],\n\t\t[NS.IETF_CALDAV, 'schedule-outbox-URL'],\n\t\t[NS.DAV, 'displayname'],\n\t\t[NS.DAV, 'principal-URL'],\n\t\t[NS.DAV, 'supported-report-set']\n\t], 0);\n\n\tconst calendarHomes = props[\"{urn:ietf:params:xml:ns:caldav}calendar-home-set\"];\n\n\treturn calendarHomes.map((calendarHome) => {\n\t\tconst url = request.pathname(calendarHome.textContent);\n\t\treturn new CalendarHome(account, request, url, props);\n\t});\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n"],"sourceRoot":""}